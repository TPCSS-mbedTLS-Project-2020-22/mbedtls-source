{"message":"type `mbedtls_md_type_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"MbedtlsMdTypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_md_type_t` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_md_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdTypeT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_NONE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":91,"byte_end":106,"line_start":7,"line_end":7,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_NONE=0,    /**< None. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":91,"byte_end":106,"line_start":7,"line_end":7,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_NONE=0,    /**< None. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsMdNone","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_NONE` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_NONE=0,    /**< None. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdNone`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD2` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":131,"byte_end":145,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":131,"byte_end":145,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD2` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd2`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD4` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":189,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":189,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD4` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd4`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD5` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":247,"byte_end":261,"line_start":10,"line_end":10,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":247,"byte_end":261,"line_start":10,"line_end":10,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD5` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd5`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA1` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":305,"byte_end":320,"line_start":11,"line_end":11,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":305,"byte_end":320,"line_start":11,"line_end":11,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsMdSha1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA1` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha1`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA224` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":365,"byte_end":382,"line_start":12,"line_end":12,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":365,"byte_end":382,"line_start":12,"line_end":12,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha224","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA224` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha224`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA256` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":427,"byte_end":444,"line_start":13,"line_end":13,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":427,"byte_end":444,"line_start":13,"line_end":13,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha256","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA256` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha256`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA384` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":489,"byte_end":506,"line_start":14,"line_end":14,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":489,"byte_end":506,"line_start":14,"line_end":14,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha384","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA384` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha384`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA512` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":551,"byte_end":568,"line_start":15,"line_end":15,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":551,"byte_end":568,"line_start":15,"line_end":15,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha512","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA512` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha512`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_RIPEMD160` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":613,"byte_end":633,"line_start":16,"line_end":16,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/md_header.rs","byte_start":613,"byte_end":633,"line_start":16,"line_end":16,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":"MbedtlsMdRipemd160","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_RIPEMD160` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdRipemd160`\u001b[0m\n\n"}
{"message":"type `mbedtls_pk_type_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"MbedtlsPkTypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_pk_type_t` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:3:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_pk_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkTypeT`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_NONE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":35,"byte_end":50,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_NONE=0,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":35,"byte_end":50,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_NONE=0,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsPkNone","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_NONE` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_NONE=0,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkNone`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSA` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":58,"byte_end":72,"line_start":5,"line_end":5,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":58,"byte_end":72,"line_start":5,"line_end":5,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsPkRsa","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSA` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSA,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsa`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECKEY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":78,"byte_end":94,"line_start":6,"line_end":6,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":78,"byte_end":94,"line_start":6,"line_end":6,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"MbedtlsPkEckey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECKEY` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECKEY,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEckey`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECKEY_DH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":100,"byte_end":119,"line_start":7,"line_end":7,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY_DH,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":100,"byte_end":119,"line_start":7,"line_end":7,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY_DH,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"MbedtlsPkEckeyDh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECKEY_DH` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECKEY_DH,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEckeyDh`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECDSA` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":125,"byte_end":141,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECDSA,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":125,"byte_end":141,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECDSA,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"MbedtlsPkEcdsa","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECDSA` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECDSA,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEcdsa`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSA_ALT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":147,"byte_end":165,"line_start":9,"line_end":9,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA_ALT,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":147,"byte_end":165,"line_start":9,"line_end":9,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA_ALT,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"MbedtlsPkRsaAlt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSA_ALT` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSA_ALT,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsaAlt`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSASSA_PSS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":171,"byte_end":192,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSASSA_PSS,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":171,"byte_end":192,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSASSA_PSS,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"MbedtlsPkRsassaPss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSASSA_PSS` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSASSA_PSS,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsassaPss`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_OPAQUE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":198,"byte_end":215,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_OPAQUE,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":198,"byte_end":215,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_OPAQUE,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsPkOpaque","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_OPAQUE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_OPAQUE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkOpaque`\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_x509_name`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":128,"byte_end":164,"line_start":8,"line_end":8,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_name;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":124,"byte_end":165,"line_start":8,"line_end":8,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_name;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_x509_name`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_x509_name;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_pk_rsassa_pss_options`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":170,"byte_end":218,"line_start":9,"line_end":9,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_pk_rsassa_pss_options;","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":166,"byte_end":219,"line_start":9,"line_end":9,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_pk_rsassa_pss_options;","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_pk_rsassa_pss_options`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_pk_rsassa_pss_options;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::tm`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":224,"byte_end":245,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use crate::x509::x509::tm;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":220,"byte_end":246,"line_start":10,"line_end":10,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use crate::x509::x509::tm;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::tm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::tm;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_x509_time`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":251,"byte_end":287,"line_start":11,"line_end":11,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_time;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":247,"byte_end":288,"line_start":11,"line_end":11,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_time;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_x509_time`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_x509_time;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `mbedtls_asn1_sequence` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":"MbedtlsAsn1Sequence","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_asn1_sequence` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:21:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_asn1_sequence\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsAsn1Sequence`\u001b[0m\n\n"}
{"message":"type `mbedtls_pk_type_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"MbedtlsPkTypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_pk_type_t` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:3:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_pk_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkTypeT`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_NONE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":35,"byte_end":50,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_NONE=0,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":35,"byte_end":50,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_NONE=0,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsPkNone","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_NONE` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_NONE=0,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkNone`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSA` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":58,"byte_end":72,"line_start":5,"line_end":5,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":58,"byte_end":72,"line_start":5,"line_end":5,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsPkRsa","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSA` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSA,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsa`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECKEY` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":78,"byte_end":94,"line_start":6,"line_end":6,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":78,"byte_end":94,"line_start":6,"line_end":6,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"MbedtlsPkEckey","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECKEY` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECKEY,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEckey`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECKEY_DH` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":100,"byte_end":119,"line_start":7,"line_end":7,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY_DH,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":100,"byte_end":119,"line_start":7,"line_end":7,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECKEY_DH,","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"MbedtlsPkEckeyDh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECKEY_DH` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECKEY_DH,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEckeyDh`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_ECDSA` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":125,"byte_end":141,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECDSA,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":125,"byte_end":141,"line_start":8,"line_end":8,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_ECDSA,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":"MbedtlsPkEcdsa","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_ECDSA` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_ECDSA,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkEcdsa`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSA_ALT` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":147,"byte_end":165,"line_start":9,"line_end":9,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA_ALT,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":147,"byte_end":165,"line_start":9,"line_end":9,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSA_ALT,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"MbedtlsPkRsaAlt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSA_ALT` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSA_ALT,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsaAlt`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_RSASSA_PSS` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":171,"byte_end":192,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSASSA_PSS,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":171,"byte_end":192,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_RSASSA_PSS,","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":"MbedtlsPkRsassaPss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_RSASSA_PSS` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_RSASSA_PSS,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsassaPss`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_PK_OPAQUE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":198,"byte_end":215,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_OPAQUE,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":198,"byte_end":215,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_PK_OPAQUE,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsPkOpaque","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_PK_OPAQUE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_PK_OPAQUE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkOpaque`\u001b[0m\n\n"}
{"message":"type `mbedtls_md_type_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"MbedtlsMdTypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_md_type_t` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_md_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdTypeT`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_NONE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":91,"byte_end":106,"line_start":7,"line_end":7,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_NONE=0,    /**< None. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":91,"byte_end":106,"line_start":7,"line_end":7,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_NONE=0,    /**< None. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsMdNone","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_NONE` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_NONE=0,    /**< None. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdNone`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD2` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":131,"byte_end":145,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":131,"byte_end":145,"line_start":8,"line_end":8,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD2` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD2,       /**< The MD2 message digest. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd2`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD4` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":189,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":189,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD4` should have an upper camel case name\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD4,       /**< The MD4 message digest. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd4`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_MD5` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":247,"byte_end":261,"line_start":10,"line_end":10,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":247,"byte_end":261,"line_start":10,"line_end":10,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMdMd5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_MD5` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_MD5,       /**< The MD5 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdMd5`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA1` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":305,"byte_end":320,"line_start":11,"line_end":11,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":305,"byte_end":320,"line_start":11,"line_end":11,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":"MbedtlsMdSha1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA1` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA1,      /**< The SHA-1 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha1`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA224` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":365,"byte_end":382,"line_start":12,"line_end":12,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":365,"byte_end":382,"line_start":12,"line_end":12,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha224","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA224` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA224,    /**< The SHA-224 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha224`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA256` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":427,"byte_end":444,"line_start":13,"line_end":13,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":427,"byte_end":444,"line_start":13,"line_end":13,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha256","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA256` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA256,    /**< The SHA-256 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha256`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA384` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":489,"byte_end":506,"line_start":14,"line_end":14,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":489,"byte_end":506,"line_start":14,"line_end":14,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha384","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA384` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA384,    /**< The SHA-384 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha384`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_SHA512` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":551,"byte_end":568,"line_start":15,"line_end":15,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":551,"byte_end":568,"line_start":15,"line_end":15,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMdSha512","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_SHA512` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_SHA512,    /**< The SHA-512 message digest. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdSha512`\u001b[0m\n\n"}
{"message":"variant `MBEDTLS_MD_RIPEMD160` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":613,"byte_end":633,"line_start":16,"line_end":16,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":613,"byte_end":633,"line_start":16,"line_end":16,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":"MbedtlsMdRipemd160","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `MBEDTLS_MD_RIPEMD160` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    MBEDTLS_MD_RIPEMD160, // The RIPEMD-160 message digest.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdRipemd160`\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_x509_name`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":128,"byte_end":164,"line_start":8,"line_end":8,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_name;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":124,"byte_end":165,"line_start":8,"line_end":8,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_name;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_x509_name`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_x509_name;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_pk_rsassa_pss_options`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":170,"byte_end":218,"line_start":9,"line_end":9,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_pk_rsassa_pss_options;","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":166,"byte_end":219,"line_start":9,"line_end":9,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_pk_rsassa_pss_options;","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_pk_rsassa_pss_options`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_pk_rsassa_pss_options;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::tm`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":224,"byte_end":245,"line_start":10,"line_end":10,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use crate::x509::x509::tm;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":220,"byte_end":246,"line_start":10,"line_end":10,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use crate::x509::x509::tm;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::tm`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::tm;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::x509::x509::mbedtls_x509_time`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":251,"byte_end":287,"line_start":11,"line_end":11,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_time;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":247,"byte_end":288,"line_start":11,"line_end":11,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::x509::x509::mbedtls_x509_time;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::x509::x509::mbedtls_x509_time`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::x509::x509::mbedtls_x509_time;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `mbedtls_asn1_sequence` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":"MbedtlsAsn1Sequence","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_asn1_sequence` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:21:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_asn1_sequence\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsAsn1Sequence`\u001b[0m\n\n"}
{"message":"type `p` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":292,"byte_end":293,"line_start":18,"line_end":18,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"pub struct p","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":292,"byte_end":293,"line_start":18,"line_end":18,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"pub struct p","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"P","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `p` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct p\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `P`\u001b[0m\n\n"}
{"message":"type `mbedtls_md_info_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":498,"byte_end":515,"line_start":31,"line_end":31,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_md_info_t","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":498,"byte_end":515,"line_start":31,"line_end":31,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_md_info_t","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"MbedtlsMdInfoT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_md_info_t` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:31:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_md_info_t\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMdInfoT`\u001b[0m\n\n"}
{"message":"type `mbedtls_x509_buf` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1651,"byte_end":1667,"line_start":59,"line_end":59,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_buf","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1651,"byte_end":1667,"line_start":59,"line_end":59,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_buf","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":"MbedtlsX509Buf","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_x509_buf` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:59:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_buf\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsX509Buf`\u001b[0m\n\n"}
{"message":"type `mbedtls_x509_name` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1911,"byte_end":1928,"line_start":73,"line_end":73,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_name","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1911,"byte_end":1928,"line_start":73,"line_end":73,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_name","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"MbedtlsX509Name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_x509_name` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:73:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsX509Name`\u001b[0m\n\n"}
{"message":"type `mbedtls_pk_rsassa_pss_options` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":2641,"byte_end":2670,"line_start":104,"line_end":104,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"pub struct mbedtls_pk_rsassa_pss_options","highlight_start":12,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":2641,"byte_end":2670,"line_start":104,"line_end":104,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"pub struct mbedtls_pk_rsassa_pss_options","highlight_start":12,"highlight_end":41}],"label":null,"suggested_replacement":"MbedtlsPkRsassaPssOptions","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_pk_rsassa_pss_options` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:104:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_pk_rsassa_pss_options\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsPkRsassaPssOptions`\u001b[0m\n\n"}
{"message":"type `tm` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":2772,"byte_end":2774,"line_start":111,"line_end":111,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"pub struct tm","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":2772,"byte_end":2774,"line_start":111,"line_end":111,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"pub struct tm","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"Tm","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `tm` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:111:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct tm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Tm`\u001b[0m\n\n"}
{"message":"type `mbedtls_x509_time` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3056,"byte_end":3073,"line_start":129,"line_end":129,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_time","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":3056,"byte_end":3073,"line_start":129,"line_end":129,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_time","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":"MbedtlsX509Time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_x509_time` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:129:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsX509Time`\u001b[0m\n\n"}
{"message":"type `mbedtls_mpi_sint` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1883,"byte_end":1899,"line_start":25,"line_end":25,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"type mbedtls_mpi_sint = i64;","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":1883,"byte_end":1899,"line_start":25,"line_end":25,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"type mbedtls_mpi_sint = i64;","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMpiSint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_mpi_sint` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:25:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mtype mbedtls_mpi_sint = i64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMpiSint`\u001b[0m\n\n"}
{"message":"type `mbedtls_mpi_uint` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1912,"byte_end":1928,"line_start":26,"line_end":26,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"type mbedtls_mpi_uint = u64;","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":1912,"byte_end":1928,"line_start":26,"line_end":26,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"type mbedtls_mpi_uint = u64;","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":"MbedtlsMpiUint","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_mpi_uint` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:26:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mtype mbedtls_mpi_uint = u64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMpiUint`\u001b[0m\n\n"}
{"message":"type `mbedtls_mpi` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1944,"byte_end":1955,"line_start":28,"line_end":28,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"struct mbedtls_mpi","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":1944,"byte_end":1955,"line_start":28,"line_end":28,"column_start":8,"column_end":19,"is_primary":true,"text":[{"text":"struct mbedtls_mpi","highlight_start":8,"highlight_end":19}],"label":null,"suggested_replacement":"MbedtlsMpi","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mbedtls_mpi` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:28:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mstruct mbedtls_mpi\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MbedtlsMpi`\u001b[0m\n\n"}
{"message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50555,"byte_end":50582,"line_start":1789,"line_end":1789,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"    mbedtls_mpi_free( &mut Y );","highlight_start":5,"highlight_end":32}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/bignum.rs","byte_start":48476,"byte_end":50550,"line_start":1731,"line_end":1788,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop","highlight_start":5,"highlight_end":9},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        mbedtls_mpi_fill_random( &mut X, n * ciL, f_rng, &mut p_rng ) ;","highlight_start":1,"highlight_end":72},{"text":"        if X.p[n-1] < CEIL_MAXUINT_DIV_SQRT2  { continue; }","highlight_start":1,"highlight_end":60},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        k = n * biL;","highlight_start":1,"highlight_end":21},{"text":"        if k > nbits { mbedtls_mpi_shift_r( &mut X, k - nbits ) ; }","highlight_start":1,"highlight_end":68},{"text":"        X.p[0] |= 1;","highlight_start":1,"highlight_end":21},{"text":"        if ( flags & MBEDTLS_MPI_GEN_PRIME_FLAG_DH ) == 0 ","highlight_start":1,"highlight_end":59},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            ret = mbedtls_mpi_is_prime_ext( &X, rounds, f_rng, &mut p_rng );","highlight_start":1,"highlight_end":77},{"text":"            if ret != MBEDTLS_ERR_MPI_NOT_ACCEPTABLE ","highlight_start":1,"highlight_end":54},{"text":"               {    mbedtls_mpi_free( &mut Y );","highlight_start":1,"highlight_end":48},{"text":"                    return ret ;","highlight_start":1,"highlight_end":33},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        else","highlight_start":1,"highlight_end":13},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            X.p[0] |= 2;","highlight_start":1,"highlight_end":25},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            mbedtls_mpi_mod_int( &mut r, &X, 3 );","highlight_start":1,"highlight_end":50},{"text":"            if r == 0  {","highlight_start":1,"highlight_end":25},{"text":"\t\t\t\tlet mut tmp: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":1,"highlight_end":64},{"text":"\t\t\t\tmbedtls_mpi_copy(&mut tmp, &X);","highlight_start":1,"highlight_end":36},{"text":"                mbedtls_mpi_add_int( &mut X, &tmp, 8 );","highlight_start":1,"highlight_end":56},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            else if r == 1  {","highlight_start":1,"highlight_end":30},{"text":"\t\t\t\tlet mut tmp: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":1,"highlight_end":64},{"text":"\t\t\t\tmbedtls_mpi_copy(&mut tmp, &X);","highlight_start":1,"highlight_end":36},{"text":"                mbedtls_mpi_add_int( &mut X, &tmp, 4 ); ","highlight_start":1,"highlight_end":57},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            mbedtls_mpi_copy( &mut Y, &X );","highlight_start":1,"highlight_end":44},{"text":"            mbedtls_mpi_shift_r( &mut Y, 1 );","highlight_start":1,"highlight_end":46},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            loop","highlight_start":1,"highlight_end":17},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                if mpi_check_small_factors(&X ) == 0 &&","highlight_start":1,"highlight_end":56},{"text":"                   mpi_check_small_factors(&Y ) == 0 &&","highlight_start":1,"highlight_end":56},{"text":"                   mpi_miller_rabin(  &X, rounds as usize, f_rng, &mut p_rng ) == 0 &&","highlight_start":1,"highlight_end":87},{"text":"                   mpi_miller_rabin( &Y, rounds as usize, f_rng, &mut p_rng ) == 0 ","highlight_start":1,"highlight_end":84},{"text":"                    {     ","highlight_start":1,"highlight_end":27},{"text":"\t\t\t\t\t\tmbedtls_mpi_free( &mut Y );","highlight_start":1,"highlight_end":34},{"text":"                        return 0; ","highlight_start":1,"highlight_end":35},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                if ret != MBEDTLS_ERR_MPI_NOT_ACCEPTABLE","highlight_start":1,"highlight_end":57},{"text":"                    {    ","highlight_start":1,"highlight_end":26},{"text":"\t\t\t\t\t\tmbedtls_mpi_free( &mut Y );","highlight_start":1,"highlight_end":34},{"text":"                        return ret;","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                let mut tmp: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":1,"highlight_end":76},{"text":"                mbedtls_mpi_copy(&mut tmp, &X);","highlight_start":1,"highlight_end":48},{"text":"                mbedtls_mpi_add_int( &mut X,  &tmp, 12 );","highlight_start":1,"highlight_end":58},{"text":"                mbedtls_mpi_copy(&mut tmp, &Y);","highlight_start":1,"highlight_end":48},{"text":"                mbedtls_mpi_add_int( &mut Y,  &tmp, 6  );","highlight_start":1,"highlight_end":58},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable statement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1789:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1731\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1732\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1733\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mbedtls_mpi_fill_random( &mut X, n * ciL, f_rng, &mut p_rng ) ;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1734\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if X.p[n-1] < CEIL_MAXUINT_DIV_SQRT2  { continue; }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1787\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1788\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1789\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    mbedtls_mpi_free( &mut Y );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable statement\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_NONE` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(bindings_with_variant_name)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_NONE` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:45:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(bindings_with_variant_name)]` on by default\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD2` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD2` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:46:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD4` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD4` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD5` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD5` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:48:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA1` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA1` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:49:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA224` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA224` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:50:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA256` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA256` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA384` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA384` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:52:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA512` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA512` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:53:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_RIPEMD160` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_RIPEMD160` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:54:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160`\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:46:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_patterns)]` on by default\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:48:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:49:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:50:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:52:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:53:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":false,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:54:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_NONE` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_NONE` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:189:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD2` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD2` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD4` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD4` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:203:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_MD5` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_MD5` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:210:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA1` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA1` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:217:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA224` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA224` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA256` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA256` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA384` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA384` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_SHA512` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_SHA512` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:245:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512`\u001b[0m\n\n"}
{"message":"pattern binding `MBEDTLS_MD_RIPEMD160` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`","code":{"code":"E0170","explanation":"A pattern binding is using the same name as one of the variants of a type.\n\nErroneous code example:\n\n```compile_fail,E0170\n# #![deny(warnings)]\nenum Method {\n    GET,\n    POST,\n}\n\nfn is_empty(s: Method) -> bool {\n    match s {\n        GET => true,\n        _ => false\n    }\n}\n\nfn main() {}\n```\n\nEnum variants are qualified by default. For example, given this type:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n```\n\nYou would match it using:\n\n```\nenum Method {\n    GET,\n    POST,\n}\n\nlet m = Method::GET;\n\nmatch m {\n    Method::GET => {},\n    Method::POST => {},\n}\n```\n\nIf you don't qualify the names, the code will bind new variables named \"GET\" and\n\"POST\" instead. This behavior is likely not what you want, so `rustc` warns when\nthat happens.\n\nQualified names are good practice, and most code works well with them. But if\nyou prefer them unqualified, you can import the variants into scope:\n\n```\nuse Method::*;\nenum Method { GET, POST }\n# fn main() {}\n```\n\nIf you want others to be able to import variants from your module directly, use\n`pub use`:\n\n```\npub use Method::*;\npub enum Method { GET, POST }\n# fn main() {}\n```\n"},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"to match on the variant, qualify the path","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning[E0170]\u001b[0m\u001b[0m\u001b[1m: pattern binding `MBEDTLS_MD_RIPEMD160` is named the same as one of the variants of the type `x509::x509::md_header::mbedtls_md_type_t`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:252:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: to match on the variant, qualify the path: `x509::x509::md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160`\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:203:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:210:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:217:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:245:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unreachable pattern","code":{"code":"unreachable_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":"unreachable pattern","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":false,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":"matches any value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable pattern\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:252:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmatches any value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable pattern\u001b[0m\n\n"}
{"message":"unused variable: `x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4344,"byte_end":4345,"line_start":172,"line_end":172,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4344,"byte_end":4345,"line_start":172,"line_end":172,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:172:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `y`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4370,"byte_end":4371,"line_start":172,"line_end":172,"column_start":58,"column_end":59,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {","highlight_start":58,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4370,"byte_end":4371,"line_start":172,"line_end":172,"column_start":58,"column_end":59,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {","highlight_start":58,"highlight_end":59}],"label":null,"suggested_replacement":"_y","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `y`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:172:58\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_y`\u001b[0m\n\n"}
{"message":"unused variable: `sig_oid`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4471,"byte_end":4478,"line_start":176,"line_end":176,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4471,"byte_end":4478,"line_start":176,"line_end":176,"column_start":33,"column_end":40,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":"_sig_oid","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sig_oid`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:176:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtl\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sig_oid`\u001b[0m\n\n"}
{"message":"unused variable: `md_alg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4503,"byte_end":4509,"line_start":176,"line_end":176,"column_start":65,"column_end":71,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":65,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4503,"byte_end":4509,"line_start":176,"line_end":176,"column_start":65,"column_end":71,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":65,"highlight_end":71}],"label":null,"suggested_replacement":"_md_alg","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `md_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:176:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_md_alg`\u001b[0m\n\n"}
{"message":"unused variable: `pk_alg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4546,"byte_end":4552,"line_start":176,"line_end":176,"column_start":108,"column_end":114,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":108,"highlight_end":114}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4546,"byte_end":4552,"line_start":176,"line_end":176,"column_start":108,"column_end":114,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":108,"highlight_end":114}],"label":null,"suggested_replacement":"_pk_alg","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `pk_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:176:108\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_pk_alg`\u001b[0m\n\n"}
{"message":"unused variable: `sig_oid`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4652,"byte_end":4659,"line_start":179,"line_end":179,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4652,"byte_end":4659,"line_start":179,"line_end":179,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":"_sig_oid","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sig_oid`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:179:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sig_oid`\u001b[0m\n\n"}
{"message":"unused variable: `desc`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4684,"byte_end":4688,"line_start":179,"line_end":179,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4684,"byte_end":4688,"line_start":179,"line_end":179,"column_start":70,"column_end":74,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {","highlight_start":70,"highlight_end":74}],"label":null,"suggested_replacement":"_desc","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `desc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:179:70\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_desc`\u001b[0m\n\n"}
{"message":"unused variable: `x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4763,"byte_end":4764,"line_start":182,"line_end":182,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4763,"byte_end":4764,"line_start":182,"line_end":182,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:182:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x`\u001b[0m\n\n"}
{"message":"unused variable: `y`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4789,"byte_end":4790,"line_start":182,"line_end":182,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4789,"byte_end":4790,"line_start":182,"line_end":182,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"_y","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `y`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:182:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_y`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_NONE`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"_MBEDTLS_MD_NONE","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_NONE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:189:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_NONE`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD2`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD4`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD4","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD4`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:203:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD4`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD5`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD5","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD5`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:210:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD5`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:217:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA1`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA224`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA224","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA224`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA224`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA256`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA256","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA256`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA256`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA384`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA384","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA384`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA384`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA512`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA512","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA512`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:245:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA512`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_RIPEMD160`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"_MBEDTLS_MD_RIPEMD160","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_RIPEMD160`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:252:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_RIPEMD160`\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":26534,"byte_end":26539,"line_start":827,"line_end":827,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":26534,"byte_end":26539,"line_start":827,"line_end":827,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: i32;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:827:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut i: i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"value assigned to `ret` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":29969,"byte_end":29976,"line_start":953,"line_end":953,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let mut ret = x509_header::MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `ret` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:953:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m953\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut ret = x509_header::MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"variable `md_info` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32791,"byte_end":32802,"line_start":1050,"line_end":1050,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            let mut md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_md_info` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `md_info` is assigned to, but never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1050:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut md_info : mbedtls_md_info_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_md_info` instead\u001b[0m\n\n"}
{"message":"variable `mgf_md_info` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32840,"byte_end":32855,"line_start":1051,"line_end":1051,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"            let mut mgf_md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_mgf_md_info` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `mgf_md_info` is assigned to, but never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1051:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1051\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut mgf_md_info : mbedtls_md_info_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_mgf_md_info` instead\u001b[0m\n\n"}
{"message":"value assigned to `md_info` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32890,"byte_end":32897,"line_start":1053,"line_end":1053,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"            md_info = mbedtls_md_info_from_type( md_alg.copy() );","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `md_info` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1053:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1053\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            md_info = mbedtls_md_info_from_type( md_alg.copy() );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `mgf_md_info` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32957,"byte_end":32968,"line_start":1055,"line_end":1055,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"            mgf_md_info = mbedtls_md_info_from_type( pss_opts.mgf1_hash_id );","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `mgf_md_info` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1055:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1055\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            mgf_md_info = mbedtls_md_info_from_type( pss_opts.mgf1_hash_id );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `n` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":34278,"byte_end":34279,"line_start":1103,"line_end":1103,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    n = n - (ret as usize);","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `n` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1103:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    n = n - (ret as usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `is_common_era`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":34730,"byte_end":34743,"line_start":1116,"line_end":1116,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"    let ( is_common_era , year) = now_t.year_ce();","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":34730,"byte_end":34743,"line_start":1116,"line_end":1116,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"    let ( is_common_era , year) = now_t.year_ce();","highlight_start":11,"highlight_end":24}],"label":null,"suggested_replacement":"_is_common_era","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `is_common_era`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1116:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let ( is_common_era , year) = now_t.year_ce();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_is_common_era`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_NONE`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"_MBEDTLS_MD_NONE","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_NONE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:45:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_NONE`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:46:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD2`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD4`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD4","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD4`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD4`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_MD5`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"_MBEDTLS_MD_MD5","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_MD5`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:48:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_MD5`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:49:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA1`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA224`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA224","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA224`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:50:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA224`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA256`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA256","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA256`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA256`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA384`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA384","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA384`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:52:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA384`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_SHA512`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"_MBEDTLS_MD_SHA512","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_SHA512`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:53:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_SHA512`\u001b[0m\n\n"}
{"message":"unused variable: `MBEDTLS_MD_RIPEMD160`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"_MBEDTLS_MD_RIPEMD160","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `MBEDTLS_MD_RIPEMD160`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:54:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_MBEDTLS_MD_RIPEMD160`\u001b[0m\n\n"}
{"message":"value assigned to `i` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":3930,"byte_end":3935,"line_start":128,"line_end":128,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: usize = 0;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `i` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:128:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut i: usize = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `j` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7725,"byte_end":7730,"line_start":291,"line_end":291,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut j: usize = 0;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `j` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:291:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut j: usize = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `ret` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":13035,"byte_end":13042,"line_start":513,"line_end":513,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `ret` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:513:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `ret` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":25584,"byte_end":25591,"line_start":984,"line_end":984,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `ret` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:984:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m984\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `x`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":34673,"byte_end":34674,"line_start":1328,"line_end":1328,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"        Some(x) => {},","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":34673,"byte_end":34674,"line_start":1328,"line_end":1328,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"        Some(x) => {},","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"_x","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `x`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1328:14\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Some(x) => {},\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_x`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"variable `m` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35240,"byte_end":35241,"line_start":1354,"line_end":1354,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let m: usize;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_m` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `m` is assigned to, but never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1354:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let m: usize;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_m` instead\u001b[0m\n\n"}
{"message":"variable `u1` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35292,"byte_end":35298,"line_start":1356,"line_end":1356,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let mut u1: mbedtls_mpi_uint;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_u1` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `u1` is assigned to, but never used\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1356:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut u1: mbedtls_mpi_uint;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_u1` instead\u001b[0m\n\n"}
{"message":"value assigned to `m` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35450,"byte_end":35451,"line_start":1363,"line_end":1363,"column_start":18,"column_end":19,"is_primary":true,"text":[{"text":"    if B.n < n { m = B.n; }","highlight_start":18,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `m` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1363:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    if B.n < n { m = B.n; }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `m` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35472,"byte_end":35473,"line_start":1364,"line_end":1364,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    else { m = n; }","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `m` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1364:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    else { m = n; }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `u1` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35573,"byte_end":35575,"line_start":1370,"line_end":1370,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        u1 = ( d[di] + u0 * B.p[0] ) * mm;","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `u1` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1370:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        u1 = ( d[di] + u0 * B.p[0] ) * mm;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":37771,"byte_end":37776,"line_start":1435,"line_end":1435,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: u8;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":37771,"byte_end":37776,"line_start":1435,"line_end":1435,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: u8;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1435:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut i: u8;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"value assigned to `count` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":45599,"byte_end":45604,"line_start":1644,"line_end":1644,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"                count += 1;","highlight_start":17,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `count` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1644:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                count += 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `ret` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50952,"byte_end":50959,"line_start":1802,"line_end":1802,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `ret` is never read\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1802:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1802\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut ret: i32 = MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51660,"byte_end":51665,"line_start":1830,"line_end":1830,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: usize;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51660,"byte_end":51665,"line_start":1830,"line_end":1830,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let mut i: usize;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `i`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1830:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1830\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut i: usize;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32638,"byte_end":32650,"line_start":1049,"line_end":1049,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let mut pss_opts = mbedtls_pk_rsassa_pss_options{mgf1_hash_id: sig_opts.mgf1_hash_id.copy(), expected_salt_len: sig_opts.expected_salt_len};","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":32638,"byte_end":32642,"line_start":1049,"line_end":1049,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut pss_opts = mbedtls_pk_rsassa_pss_options{mgf1_hash_id: sig_opts.mgf1_hash_id.copy(), expected_salt_len: sig_opts.expected_salt_len};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1049:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m   let mut pss_opts = mbedtls_pk_rsassa_pss_options{mgf1_hash_id: sig_opts.mgf1_hash_id.copy(), expected_salt_len: sig_opts.expected_s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32791,"byte_end":32802,"line_start":1050,"line_end":1050,"column_start":17,"column_end":28,"is_primary":true,"text":[{"text":"            let mut md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":32791,"byte_end":32795,"line_start":1050,"line_end":1050,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1050:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut md_info : mbedtls_md_info_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":32840,"byte_end":32855,"line_start":1051,"line_end":1051,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"            let mut mgf_md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":32840,"byte_end":32844,"line_start":1051,"line_end":1051,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut mgf_md_info : mbedtls_md_info_t;","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1051:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1051\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut mgf_md_info : mbedtls_md_info_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":49,"byte_end":105,"line_start":2,"line_end":2,"column_start":1,"column_end":57,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":107,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combination. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combi\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":255,"byte_end":331,"line_start":5,"line_end":5,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":367,"byte_end":443,"line_start":6,"line_end":6,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type expected. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":518,"byte_end":594,"line_start":7,"line_end":7,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":648,"byte_end":724,"line_start":8,"line_end":8,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":770,"byte_end":846,"line_start":9,"line_end":9,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:9:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":894,"byte_end":970,"line_start":10,"line_end":10,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1014,"byte_end":1090,"line_start":11,"line_end":11,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1134,"byte_end":1210,"line_start":12,"line_end":12,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1256,"byte_end":1332,"line_start":13,"line_end":13,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1381,"byte_end":1457,"line_start":14,"line_end":14,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1514,"byte_end":1590,"line_start":15,"line_end":15,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1642,"byte_end":1718,"line_start":16,"line_end":16,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x509_crt sig_oid) */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1799,"byte_end":1875,"line_start":17,"line_end":17,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signature check failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signa\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":1958,"byte_end":2034,"line_start":18,"line_end":18,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2081,"byte_end":2157,"line_start":19,"line_end":19,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2182,"byte_end":2258,"line_start":20,"line_end":20,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2297,"byte_end":2373,"line_start":21,"line_end":21,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2410,"byte_end":2486,"line_start":22,"line_end":22,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2529,"byte_end":2605,"line_start":23,"line_end":23,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or the vrfy callback failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or th\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2695,"byte_end":2759,"line_start":26,"line_end":26,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2807,"byte_end":2871,"line_start":27,"line_end":27,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":2929,"byte_end":2993,"line_start":28,"line_end":28,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected CN. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3073,"byte_end":3137,"line_start":29,"line_end":29,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:29:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3206,"byte_end":3270,"line_start":30,"line_end":30,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3331,"byte_end":3395,"line_start":31,"line_end":31,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_MISSING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3425,"byte_end":3489,"line_start":32,"line_end":32,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_MISSING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3524,"byte_end":3588,"line_start":33,"line_end":33,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_OTHER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3636,"byte_end":3700,"line_start":34,"line_end":34,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_OTHER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:34:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3756,"byte_end":3820,"line_start":35,"line_end":35,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:35:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3877,"byte_end":3941,"line_start":36,"line_end":36,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:36:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":3978,"byte_end":4042,"line_start":37,"line_end":37,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4097,"byte_end":4161,"line_start":38,"line_end":38,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4224,"byte_end":4288,"line_start":39,"line_end":39,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4345,"byte_end":4409,"line_start":40,"line_end":40,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4472,"byte_end":4536,"line_start":41,"line_end":41,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:41:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs E\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4619,"byte_end":4683,"line_start":42,"line_end":42,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:42:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4775,"byte_end":4839,"line_start":43,"line_end":43,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:43:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":4894,"byte_end":4958,"line_start":44,"line_end":44,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:44:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5033,"byte_end":5097,"line_start":45,"line_end":45,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5181,"byte_end":5249,"line_start":47,"line_end":47,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:47:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5250,"byte_end":5318,"line_start":48,"line_end":48,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:48:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5319,"byte_end":5387,"line_start":49,"line_end":49,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:49:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5388,"byte_end":5456,"line_start":50,"line_end":50,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5457,"byte_end":5525,"line_start":51,"line_end":51,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:51:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5526,"byte_end":5594,"line_start":52,"line_end":52,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5595,"byte_end":5663,"line_start":53,"line_end":53,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:53:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5664,"byte_end":5732,"line_start":54,"line_end":54,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5733,"byte_end":5801,"line_start":55,"line_end":55,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5804,"byte_end":5872,"line_start":58,"line_end":58,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5886,"byte_end":5954,"line_start":59,"line_end":59,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:59:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":5968,"byte_end":6036,"line_start":60,"line_end":60,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:60:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6050,"byte_end":6118,"line_start":61,"line_end":61,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:61:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6132,"byte_end":6200,"line_start":62,"line_end":62,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:62:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6214,"byte_end":6282,"line_start":63,"line_end":63,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:63:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6296,"byte_end":6364,"line_start":64,"line_end":64,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:64:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6378,"byte_end":6446,"line_start":65,"line_end":65,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:65:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6460,"byte_end":6528,"line_start":66,"line_end":66,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:66:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6543,"byte_end":6611,"line_start":68,"line_end":68,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:68:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6625,"byte_end":6693,"line_start":69,"line_end":69,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:69:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6707,"byte_end":6775,"line_start":70,"line_end":70,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:70:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6789,"byte_end":6857,"line_start":71,"line_end":71,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:71:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6871,"byte_end":6939,"line_start":72,"line_end":72,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:72:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":6953,"byte_end":7021,"line_start":73,"line_end":73,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7035,"byte_end":7103,"line_start":74,"line_end":74,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:74:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7117,"byte_end":7185,"line_start":75,"line_end":75,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:75:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7224,"byte_end":7333,"line_start":79,"line_end":79,"column_start":1,"column_end":110,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:79:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7334,"byte_end":7441,"line_start":80,"line_end":80,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:80:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7442,"byte_end":7536,"line_start":81,"line_end":81,"column_start":1,"column_end":95,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";","highlight_start":1,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7537,"byte_end":7642,"line_start":82,"line_end":82,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:82:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7643,"byte_end":7743,"line_start":83,"line_end":83,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:83:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7744,"byte_end":7845,"line_start":84,"line_end":84,"column_start":1,"column_end":102,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */","highlight_start":1,"highlight_end":102}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:84:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7876,"byte_end":7976,"line_start":85,"line_end":85,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:85:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":7977,"byte_end":8085,"line_start":86,"line_end":86,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:86:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8086,"byte_end":8192,"line_start":87,"line_end":87,"column_start":1,"column_end":107,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */","highlight_start":1,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:87:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8216,"byte_end":8321,"line_start":88,"line_end":88,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:88:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8322,"byte_end":8429,"line_start":89,"line_end":89,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:89:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8430,"byte_end":8533,"line_start":90,"line_end":90,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:90:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8534,"byte_end":8642,"line_start":91,"line_end":91,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:91:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8643,"byte_end":8746,"line_start":92,"line_end":92,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:92:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8747,"byte_end":8844,"line_start":93,"line_end":93,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:93:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8845,"byte_end":8942,"line_start":94,"line_end":94,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:94:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_DER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":8944,"byte_end":9004,"line_start":96,"line_end":96,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_DER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:96:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_PEM`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9005,"byte_end":9065,"line_start":97,"line_end":97,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_PEM`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:97:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9067,"byte_end":9127,"line_start":99,"line_end":99,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:99:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9332,"byte_end":9408,"line_start":111,"line_end":111,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:111:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9467,"byte_end":9543,"line_start":112,"line_end":112,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:112:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9590,"byte_end":9666,"line_start":113,"line_end":113,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:113:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid l\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9737,"byte_end":9813,"line_start":114,"line_end":114,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:114:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9867,"byte_end":9943,"line_start":115,"line_end":115,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:115:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":9970,"byte_end":10046,"line_start":116,"line_end":116,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:116:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10081,"byte_end":10157,"line_start":117,"line_end":117,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BOOLEAN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10220,"byte_end":10279,"line_start":119,"line_end":119,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BOOLEAN`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:119:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_INTEGER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10280,"byte_end":10339,"line_start":120,"line_end":120,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_INTEGER`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:120:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BIT_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10340,"byte_end":10399,"line_start":121,"line_end":121,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BIT_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:121:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OCTET_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10400,"byte_end":10459,"line_start":122,"line_end":122,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OCTET_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:122:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_NULL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10460,"byte_end":10519,"line_start":123,"line_end":123,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_NULL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:123:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10520,"byte_end":10579,"line_start":124,"line_end":124,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OID                     : u8 = 0x06;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OID`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:124:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OID                     : u8 = 0x06;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_ENUMERATED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10580,"byte_end":10639,"line_start":125,"line_end":125,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_ENUMERATED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:125:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTF8_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10640,"byte_end":10699,"line_start":126,"line_end":126,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTF8_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:126:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SEQUENCE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10700,"byte_end":10759,"line_start":127,"line_end":127,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SEQUENCE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:127:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SET`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10760,"byte_end":10819,"line_start":128,"line_end":128,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SET                     : u8 = 0x11;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SET`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:128:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SET                     : u8 = 0x11;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10820,"byte_end":10879,"line_start":129,"line_end":129,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:129:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_T61_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10880,"byte_end":10939,"line_start":130,"line_end":130,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_T61_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_IA5_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":10940,"byte_end":10999,"line_start":131,"line_end":131,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_IA5_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTC_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11000,"byte_end":11059,"line_start":132,"line_end":132,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTC_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:132:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11060,"byte_end":11119,"line_start":133,"line_end":133,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:133:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11120,"byte_end":11179,"line_start":134,"line_end":134,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:134:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BMP_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11180,"byte_end":11239,"line_start":135,"line_end":135,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BMP_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:135:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRIMITIVE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11240,"byte_end":11299,"line_start":136,"line_end":136,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRIMITIVE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:136:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11300,"byte_end":11359,"line_start":137,"line_end":137,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:137:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11360,"byte_end":11419,"line_start":138,"line_end":138,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11421,"byte_end":11480,"line_start":140,"line_end":140,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11481,"byte_end":11540,"line_start":141,"line_end":141,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:141:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11541,"byte_end":11600,"line_start":142,"line_end":142,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:142:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11808,"byte_end":11872,"line_start":150,"line_end":150,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:150:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509_header.rs","byte_start":11896,"byte_end":11960,"line_start":151,"line_end":151,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509_header.rs:151:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"enum is never used: `mbedtls_md_type_t`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum is never used: `mbedtls_md_type_t`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/md_header.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_md_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"enum is never used: `mbedtls_pk_type_t`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum is never used: `mbedtls_pk_type_t`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/pk_header.rs:3:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_pk_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":49,"byte_end":105,"line_start":2,"line_end":2,"column_start":1,"column_end":57,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":107,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combination. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combi\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":255,"byte_end":331,"line_start":5,"line_end":5,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":367,"byte_end":443,"line_start":6,"line_end":6,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type expected. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":518,"byte_end":594,"line_start":7,"line_end":7,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":648,"byte_end":724,"line_start":8,"line_end":8,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":770,"byte_end":846,"line_start":9,"line_end":9,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:9:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":894,"byte_end":970,"line_start":10,"line_end":10,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1014,"byte_end":1090,"line_start":11,"line_end":11,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1134,"byte_end":1210,"line_start":12,"line_end":12,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1256,"byte_end":1332,"line_start":13,"line_end":13,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1381,"byte_end":1457,"line_start":14,"line_end":14,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1514,"byte_end":1590,"line_start":15,"line_end":15,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1642,"byte_end":1718,"line_start":16,"line_end":16,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x509_crt sig_oid) */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1799,"byte_end":1875,"line_start":17,"line_end":17,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signature check failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signa\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":1958,"byte_end":2034,"line_start":18,"line_end":18,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2081,"byte_end":2157,"line_start":19,"line_end":19,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2182,"byte_end":2258,"line_start":20,"line_end":20,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2297,"byte_end":2373,"line_start":21,"line_end":21,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2410,"byte_end":2486,"line_start":22,"line_end":22,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2529,"byte_end":2605,"line_start":23,"line_end":23,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or the vrfy callback failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or th\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2695,"byte_end":2759,"line_start":26,"line_end":26,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2807,"byte_end":2871,"line_start":27,"line_end":27,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":2929,"byte_end":2993,"line_start":28,"line_end":28,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected CN. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3073,"byte_end":3137,"line_start":29,"line_end":29,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:29:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3206,"byte_end":3270,"line_start":30,"line_end":30,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3331,"byte_end":3395,"line_start":31,"line_end":31,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_MISSING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3425,"byte_end":3489,"line_start":32,"line_end":32,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_MISSING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3524,"byte_end":3588,"line_start":33,"line_end":33,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_OTHER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3636,"byte_end":3700,"line_start":34,"line_end":34,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_OTHER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:34:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3756,"byte_end":3820,"line_start":35,"line_end":35,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:35:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3877,"byte_end":3941,"line_start":36,"line_end":36,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:36:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":3978,"byte_end":4042,"line_start":37,"line_end":37,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4097,"byte_end":4161,"line_start":38,"line_end":38,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4224,"byte_end":4288,"line_start":39,"line_end":39,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4345,"byte_end":4409,"line_start":40,"line_end":40,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4472,"byte_end":4536,"line_start":41,"line_end":41,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:41:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs E\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4619,"byte_end":4683,"line_start":42,"line_end":42,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:42:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4775,"byte_end":4839,"line_start":43,"line_end":43,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:43:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":4894,"byte_end":4958,"line_start":44,"line_end":44,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:44:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5033,"byte_end":5097,"line_start":45,"line_end":45,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5181,"byte_end":5249,"line_start":47,"line_end":47,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:47:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5250,"byte_end":5318,"line_start":48,"line_end":48,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:48:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5319,"byte_end":5387,"line_start":49,"line_end":49,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:49:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5388,"byte_end":5456,"line_start":50,"line_end":50,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5457,"byte_end":5525,"line_start":51,"line_end":51,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:51:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5526,"byte_end":5594,"line_start":52,"line_end":52,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5595,"byte_end":5663,"line_start":53,"line_end":53,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:53:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5664,"byte_end":5732,"line_start":54,"line_end":54,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5733,"byte_end":5801,"line_start":55,"line_end":55,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5804,"byte_end":5872,"line_start":58,"line_end":58,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5886,"byte_end":5954,"line_start":59,"line_end":59,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:59:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":5968,"byte_end":6036,"line_start":60,"line_end":60,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:60:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6050,"byte_end":6118,"line_start":61,"line_end":61,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:61:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6132,"byte_end":6200,"line_start":62,"line_end":62,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:62:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6214,"byte_end":6282,"line_start":63,"line_end":63,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:63:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6296,"byte_end":6364,"line_start":64,"line_end":64,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:64:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6378,"byte_end":6446,"line_start":65,"line_end":65,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:65:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6460,"byte_end":6528,"line_start":66,"line_end":66,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:66:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6543,"byte_end":6611,"line_start":68,"line_end":68,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:68:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6625,"byte_end":6693,"line_start":69,"line_end":69,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:69:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6707,"byte_end":6775,"line_start":70,"line_end":70,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:70:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6789,"byte_end":6857,"line_start":71,"line_end":71,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:71:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6871,"byte_end":6939,"line_start":72,"line_end":72,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:72:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":6953,"byte_end":7021,"line_start":73,"line_end":73,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7035,"byte_end":7103,"line_start":74,"line_end":74,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:74:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7117,"byte_end":7185,"line_start":75,"line_end":75,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:75:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7224,"byte_end":7333,"line_start":79,"line_end":79,"column_start":1,"column_end":110,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:79:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7334,"byte_end":7441,"line_start":80,"line_end":80,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:80:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7442,"byte_end":7536,"line_start":81,"line_end":81,"column_start":1,"column_end":95,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";","highlight_start":1,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7537,"byte_end":7642,"line_start":82,"line_end":82,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:82:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7643,"byte_end":7743,"line_start":83,"line_end":83,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:83:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7744,"byte_end":7845,"line_start":84,"line_end":84,"column_start":1,"column_end":102,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */","highlight_start":1,"highlight_end":102}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:84:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7876,"byte_end":7976,"line_start":85,"line_end":85,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:85:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":7977,"byte_end":8085,"line_start":86,"line_end":86,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:86:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8086,"byte_end":8192,"line_start":87,"line_end":87,"column_start":1,"column_end":107,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */","highlight_start":1,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:87:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8216,"byte_end":8321,"line_start":88,"line_end":88,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:88:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8322,"byte_end":8429,"line_start":89,"line_end":89,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:89:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8430,"byte_end":8533,"line_start":90,"line_end":90,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:90:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8534,"byte_end":8642,"line_start":91,"line_end":91,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:91:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8643,"byte_end":8746,"line_start":92,"line_end":92,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:92:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8747,"byte_end":8844,"line_start":93,"line_end":93,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:93:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8845,"byte_end":8942,"line_start":94,"line_end":94,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:94:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_DER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":8944,"byte_end":9004,"line_start":96,"line_end":96,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_DER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:96:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_PEM`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9005,"byte_end":9065,"line_start":97,"line_end":97,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_PEM`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:97:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9067,"byte_end":9127,"line_start":99,"line_end":99,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:99:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9332,"byte_end":9408,"line_start":111,"line_end":111,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:111:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9467,"byte_end":9543,"line_start":112,"line_end":112,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:112:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9590,"byte_end":9666,"line_start":113,"line_end":113,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:113:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid l\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9737,"byte_end":9813,"line_start":114,"line_end":114,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:114:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9867,"byte_end":9943,"line_start":115,"line_end":115,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:115:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":9970,"byte_end":10046,"line_start":116,"line_end":116,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:116:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10081,"byte_end":10157,"line_start":117,"line_end":117,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BOOLEAN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10220,"byte_end":10279,"line_start":119,"line_end":119,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BOOLEAN`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:119:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_INTEGER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10280,"byte_end":10339,"line_start":120,"line_end":120,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_INTEGER`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:120:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BIT_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10340,"byte_end":10399,"line_start":121,"line_end":121,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BIT_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:121:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OCTET_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10400,"byte_end":10459,"line_start":122,"line_end":122,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OCTET_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:122:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_NULL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10460,"byte_end":10519,"line_start":123,"line_end":123,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_NULL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:123:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10520,"byte_end":10579,"line_start":124,"line_end":124,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OID                     : u8 = 0x06;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OID`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:124:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OID                     : u8 = 0x06;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_ENUMERATED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10580,"byte_end":10639,"line_start":125,"line_end":125,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_ENUMERATED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:125:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTF8_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10640,"byte_end":10699,"line_start":126,"line_end":126,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTF8_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:126:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SEQUENCE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10700,"byte_end":10759,"line_start":127,"line_end":127,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SEQUENCE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:127:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SET`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10760,"byte_end":10819,"line_start":128,"line_end":128,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SET                     : u8 = 0x11;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SET`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:128:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SET                     : u8 = 0x11;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10820,"byte_end":10879,"line_start":129,"line_end":129,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:129:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_T61_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10880,"byte_end":10939,"line_start":130,"line_end":130,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_T61_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_IA5_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":10940,"byte_end":10999,"line_start":131,"line_end":131,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_IA5_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTC_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11000,"byte_end":11059,"line_start":132,"line_end":132,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTC_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:132:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11060,"byte_end":11119,"line_start":133,"line_end":133,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:133:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11120,"byte_end":11179,"line_start":134,"line_end":134,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:134:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BMP_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11180,"byte_end":11239,"line_start":135,"line_end":135,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BMP_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:135:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRIMITIVE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11240,"byte_end":11299,"line_start":136,"line_end":136,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRIMITIVE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:136:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11300,"byte_end":11359,"line_start":137,"line_end":137,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:137:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11360,"byte_end":11419,"line_start":138,"line_end":138,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11421,"byte_end":11480,"line_start":140,"line_end":140,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11481,"byte_end":11540,"line_start":141,"line_end":141,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:141:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11541,"byte_end":11600,"line_start":142,"line_end":142,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:142:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11808,"byte_end":11872,"line_start":150,"line_end":150,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:150:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":11896,"byte_end":11960,"line_start":151,"line_end":151,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:151:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `print`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/x509_header.rs","byte_start":12007,"byte_end":12012,"line_start":153,"line_end":153,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"pub fn print(){","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/x509_header.rs:153:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn print(){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_asn1_sequence`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_asn1_sequence`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:21:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_asn1_sequence\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_len`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":922,"byte_end":942,"line_start":33,"line_end":33,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, len: &mut usize ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_len`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:33:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, len: &mut usize ) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_tag`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":2884,"byte_end":2904,"line_start":93,"line_end":93,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, len: &mut usize, tag: u8) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_tag`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:93:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, len: &mut usize, tag: u8) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_bool`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":3382,"byte_end":3403,"line_start":109,"line_end":109,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_bool( p: &mut p, end: &usize, val: &mut usize) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_bool`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:109:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_bool( p: &mut p, end: &usize, val: &mut usize) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `asn1_get_tagged_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":3961,"byte_end":3980,"line_start":131,"line_end":131,"column_start":8,"column_end":27,"is_primary":true,"text":[{"text":"pub fn asn1_get_tagged_int( p: &mut p, end: &usize, tag: u8, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `asn1_get_tagged_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:131:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn asn1_get_tagged_int( p: &mut p, end: &usize, tag: u8, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":4791,"byte_end":4811,"line_start":165,"line_end":165,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:165:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_enum`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":5092,"byte_end":5113,"line_start":172,"line_end":172,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_enum( p: &mut p, end: &usize, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_enum`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:172:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_enum( p: &mut p, end: &usize, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_bitstring_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":5397,"byte_end":5428,"line_start":179,"line_end":179,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_bitstring_null( p: &mut p, end: &usize, len : &mut usize ) -> i32 {","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_bitstring_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:179:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_bitstring_null( p: &mut p, end: &usize, len : &mut usize ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":6028,"byte_end":6048,"line_start":203,"line_end":203,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:203:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/asn1parse.rs","byte_start":7235,"byte_end":7260,"line_start":251,"line_end":251,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg_null(  p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/asn1parse.rs:251:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg_null(  p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"enum is never used: `mbedtls_pk_type_t`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":11,"byte_end":28,"line_start":3,"line_end":3,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_pk_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum is never used: `mbedtls_pk_type_t`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:3:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_pk_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `print`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/pk_header.rs","byte_start":228,"byte_end":233,"line_start":15,"line_end":15,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"pub fn print(){","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/pk_header.rs:15:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn print(){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `print`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":8,"byte_end":13,"line_start":2,"line_end":2,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"pub fn print(){","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `print`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:2:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn print(){\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"enum is never used: `mbedtls_md_type_t`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/md_header.rs","byte_start":67,"byte_end":84,"line_start":6,"line_end":6,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub enum mbedtls_md_type_t {","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: enum is never used: `mbedtls_md_type_t`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/md_header.rs:6:10\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub enum mbedtls_md_type_t {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":49,"byte_end":105,"line_start":2,"line_end":2,"column_start":1,"column_end":57,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_INTERMEDIATE_CA`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:2:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_INTERMEDIATE_CA   : i32 =  8;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":107,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combination. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FEATURE_UNAVAILABLE              : i32 = -0x2080;  /**< Unavailable feature, e.g. RSA hashing/encryption combi\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":255,"byte_end":331,"line_start":5,"line_end":5,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_OID`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_OID                      : i32 = -0x2100;  /**< Requested OID is unknown. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":367,"byte_end":443,"line_start":6,"line_end":6,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type expected. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_FORMAT`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:6:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_FORMAT                   : i32 = -0x2180;  /**< The CRT/CRL/CSR format is invalid, e.g. different type\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":518,"byte_end":594,"line_start":7,"line_end":7,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_VERSION`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_VERSION                  : i32 = -0x2200;  /**< The CRT/CRL/CSR version element is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":648,"byte_end":724,"line_start":8,"line_end":8,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SERIAL`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SERIAL                   : i32 = -0x2280;  /**< The serial tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":770,"byte_end":846,"line_start":9,"line_end":9,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_ALG`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:9:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_ALG                      : i32 = -0x2300; /**< The algorithm tag or value is invalid. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":894,"byte_end":970,"line_start":10,"line_end":10,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_NAME                     : i32 = -0x2380;  /**< The name tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1014,"byte_end":1090,"line_start":11,"line_end":11,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_DATE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_DATE                     : i32 = -0x2400;  /**< The date tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1134,"byte_end":1210,"line_start":12,"line_end":12,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_SIGNATURE                : i32 = -0x2480;  /**< The signature tag or value invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1256,"byte_end":1332,"line_start":13,"line_end":13,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_INVALID_EXTENSIONS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_INVALID_EXTENSIONS               : i32 = -0x2500;  /**< The extension tag or value is invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1381,"byte_end":1457,"line_start":14,"line_end":14,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_VERSION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_VERSION                  : i32 = -0x2580;  /**< CRT/CRL/CSR has an unsupported version number. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1514,"byte_end":1590,"line_start":15,"line_end":15,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_UNKNOWN_SIG_ALG                  : i32 = -0x2600;  /**< Signature algorithm (oid) is unsupported. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1642,"byte_end":1718,"line_start":16,"line_end":16,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x509_crt sig_oid) */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_SIG_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_SIG_MISMATCH                     : i32 = -0x2680;  /**< Signature algorithms do not match. (see \\c ::mbedtls_x\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1799,"byte_end":1875,"line_start":17,"line_end":17,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signature check failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_VERIFY_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_VERIFY_FAILED               : i32 = -0x2700;  /**< Certificate verification failed, e.g. CRL, CA or signa\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":1958,"byte_end":2034,"line_start":18,"line_end":18,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_CERT_UNKNOWN_FORMAT              : i32 = -0x2780;  /**< Format not recognized as DER or PEM. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2081,"byte_end":2157,"line_start":19,"line_end":19,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BAD_INPUT_DATA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BAD_INPUT_DATA                   : i32 = -0x2800;  /**< Input invalid. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2182,"byte_end":2258,"line_start":20,"line_end":20,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_ALLOC_FAILED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_ALLOC_FAILED                     : i32 = -0x2880;  /**< Allocation of memory failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2297,"byte_end":2373,"line_start":21,"line_end":21,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FILE_IO_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:21:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FILE_IO_ERROR                    : i32 = -0x2900;  /**< Read/write of file failed. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2410,"byte_end":2486,"line_start":22,"line_end":22,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_BUFFER_TOO_SMALL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_BUFFER_TOO_SMALL                 : i32 = -0x2980;  /**< Destination buffer is too small. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2529,"byte_end":2605,"line_start":23,"line_end":23,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or the vrfy callback failed. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_X509_FATAL_ERROR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_X509_FATAL_ERROR                      : i32 = -0x3000;  /**< A fatal error occurred, eg the chain is too long or th\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2695,"byte_end":2759,"line_start":26,"line_end":26,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:26:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXPIRED             : i32 = 0x01;  /**< The certificate validity has expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2807,"byte_end":2871,"line_start":27,"line_end":27,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_REVOKED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:27:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_REVOKED             : i32 = 0x02;  /**< The certificate has been revoked (is on a CRL). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":2929,"byte_end":2993,"line_start":28,"line_end":28,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected CN. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_CN_MISMATCH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:28:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_CN_MISMATCH         : i32 = 0x04;  /**< The certificate Common Name (CN) does not match with the expected \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3073,"byte_end":3137,"line_start":29,"line_end":29,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:29:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NOT_TRUSTED         : i32 = 0x08;  /**< The certificate is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3206,"byte_end":3270,"line_start":30,"line_end":30,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_NOT_TRUSTED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:30:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_NOT_TRUSTED          : i32 = 0x10;  /**< The CRL is not correctly signed by the trusted CA. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3331,"byte_end":3395,"line_start":31,"line_end":31,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_EXPIRED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:31:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_EXPIRED              : i32 = 0x20;  /**< The CRL is expired. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_MISSING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3425,"byte_end":3489,"line_start":32,"line_end":32,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_MISSING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:32:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_MISSING             : i32 = 0x40;  /**< Certificate was missing. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3524,"byte_end":3588,"line_start":33,"line_end":33,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_SKIP_VERIFY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:33:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_SKIP_VERIFY         : i32 = 0x80;  /**< Certificate verification was skipped. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_OTHER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3636,"byte_end":3700,"line_start":34,"line_end":34,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_OTHER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:34:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_OTHER             : i32 = 0x0100;  /**< Other reason (can be used by verify callback) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3756,"byte_end":3820,"line_start":35,"line_end":35,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:35:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_FUTURE            : i32 = 0x0200;  /**< The certificate validity starts in the future. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3877,"byte_end":3941,"line_start":36,"line_end":36,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_FUTURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:36:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_FUTURE             : i32 = 0x0400;  /**< The CRL is from the future */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":3978,"byte_end":4042,"line_start":37,"line_end":37,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_KEY_USAGE         : i32 = 0x0800;  /**< Usage does not match the keyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4097,"byte_end":4161,"line_start":38,"line_end":38,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:38:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_EXT_KEY_USAGE     : i32 = 0x1000;  /**< Usage does not match the extendedKeyUsage extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4224,"byte_end":4288,"line_start":39,"line_end":39,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:39:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_NS_CERT_TYPE      : i32 = 0x2000;  /**< Usage does not match the nsCertType extension. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4345,"byte_end":4409,"line_start":40,"line_end":40,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:40:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_MD            : i32 = 0x4000;  /**< The certificate is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4472,"byte_end":4536,"line_start":41,"line_end":41,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:41:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_PK            : i32 = 0x8000;  /**< The certificate is signed with an unacceptable PK alg (eg RSA vs E\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4619,"byte_end":4683,"line_start":42,"line_end":42,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCERT_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:42:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCERT_BAD_KEY         : i32 = 0x010000;  /**< The certificate is signed with an unacceptable key (eg bad curve, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4775,"byte_end":4839,"line_start":43,"line_end":43,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_MD`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:43:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_MD           : i32 = 0x020000;  /**< The CRL is signed with an unacceptable hash. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":4894,"byte_end":4958,"line_start":44,"line_end":44,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_PK`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:44:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_PK           : i32 = 0x040000;  /**< The CRL is signed with an unacceptable PK alg (eg RSA vs ECDSA). */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5033,"byte_end":5097,"line_start":45,"line_end":45,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too short). */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_BADCRL_BAD_KEY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:45:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_BADCRL_BAD_KEY          : i32 = 0x080000; /**< The CRL is signed with an unacceptable key (eg bad curve, RSA too s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5181,"byte_end":5249,"line_start":47,"line_end":47,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_OTHER_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:47:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_OTHER_NAME                     : i32 = 0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5250,"byte_end":5318,"line_start":48,"line_end":48,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_RFC822_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:48:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_RFC822_NAME                    : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5319,"byte_end":5387,"line_start":49,"line_end":49,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DNS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:49:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DNS_NAME                       : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5388,"byte_end":5456,"line_start":50,"line_end":50,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_X400_ADDRESS_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:50:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_X400_ADDRESS_NAME              : i32 = 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5457,"byte_end":5525,"line_start":51,"line_end":51,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_DIRECTORY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:51:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_DIRECTORY_NAME                 : i32 = 4;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5526,"byte_end":5594,"line_start":52,"line_end":52,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_EDI_PARTY_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:52:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_EDI_PARTY_NAME                 : i32 = 5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5595,"byte_end":5663,"line_start":53,"line_end":53,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:53:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_UNIFORM_RESOURCE_IDENTIFIER    : i32 = 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5664,"byte_end":5732,"line_start":54,"line_end":54,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_IP_ADDRESS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:54:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_IP_ADDRESS                     : i32 = 7;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5733,"byte_end":5801,"line_start":55,"line_end":55,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_SAN_REGISTERED_ID`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:55:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_SAN_REGISTERED_ID                  : i32 = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5804,"byte_end":5872,"line_start":58,"line_end":58,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DIGITAL_SIGNATURE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DIGITAL_SIGNATURE            : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5886,"byte_end":5954,"line_start":59,"line_end":59,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_NON_REPUDIATION`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:59:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_NON_REPUDIATION              : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":5968,"byte_end":6036,"line_start":60,"line_end":60,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:60:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_ENCIPHERMENT             : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6050,"byte_end":6118,"line_start":61,"line_end":61,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DATA_ENCIPHERMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:61:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DATA_ENCIPHERMENT            : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6132,"byte_end":6200,"line_start":62,"line_end":62,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_AGREEMENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:62:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_AGREEMENT                : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6214,"byte_end":6282,"line_start":63,"line_end":63,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_KEY_CERT_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:63:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_KEY_CERT_SIGN                : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6296,"byte_end":6364,"line_start":64,"line_end":64,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_CRL_SIGN`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:64:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_CRL_SIGN                     : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6378,"byte_end":6446,"line_start":65,"line_end":65,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_ENCIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:65:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_ENCIPHER_ONLY                : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6460,"byte_end":6528,"line_start":66,"line_end":66,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_KU_DECIPHER_ONLY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:66:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_KU_DECIPHER_ONLY              : i32 = 0x8000;  /* bit 8 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6543,"byte_end":6611,"line_start":68,"line_end":68,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:68:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CLIENT         : i32 = 0x80;  /* bit 0 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6625,"byte_end":6693,"line_start":69,"line_end":69,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:69:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_SERVER         : i32 = 0x40;  /* bit 1 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6707,"byte_end":6775,"line_start":70,"line_end":70,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:70:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL              : i32 = 0x20;  /* bit 2 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6789,"byte_end":6857,"line_start":71,"line_end":71,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:71:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING     : i32 = 0x10;  /* bit 3 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6871,"byte_end":6939,"line_start":72,"line_end":72,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_RESERVED`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:72:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_RESERVED           : i32 = 0x08;  /* bit 4 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":6953,"byte_end":7021,"line_start":73,"line_end":73,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_SSL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:73:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_SSL_CA             : i32 = 0x04;  /* bit 5 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7035,"byte_end":7103,"line_start":74,"line_end":74,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:74:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_EMAIL_CA           : i32 = 0x02;  /* bit 6 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7117,"byte_end":7185,"line_start":75,"line_end":75,"column_start":1,"column_end":69,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */","highlight_start":1,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:75:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_NS_CERT_TYPE_OBJECT_SIGNING_CA  : i32 = 0x01;  /* bit 7 */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7224,"byte_end":7333,"line_start":79,"line_end":79,"column_start":1,"column_end":110,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:79:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_AUTHORITY_KEY_IDENTIFIER : &str = \"MBEDTLS_OID_X509_EXT_AUTHORITY_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7334,"byte_end":7441,"line_start":80,"line_end":80,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:80:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_KEY_IDENTIFIER   : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_KEY_IDENTIFIER\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7442,"byte_end":7536,"line_start":81,"line_end":81,"column_start":1,"column_end":95,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";","highlight_start":1,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:81:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m81\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_KEY_USAGE                : &str = \"MBEDTLS_OID_X509_EXT_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7537,"byte_end":7642,"line_start":82,"line_end":82,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CERTIFICATE_POLICIES`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:82:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CERTIFICATE_POLICIES     : &str = \"MBEDTLS_OID_X509_EXT_CERTIFICATE_POLICIES\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7643,"byte_end":7743,"line_start":83,"line_end":83,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_MAPPINGS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:83:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_MAPPINGS          : &str = \"MBEDTLS_OID_X509_EXT_POLICY_MAPPINGS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7744,"byte_end":7845,"line_start":84,"line_end":84,"column_start":1,"column_end":102,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */","highlight_start":1,"highlight_end":102}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:84:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_ALT_NAME         : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_ALT_NAME\";         /* Supported (DNS) */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7876,"byte_end":7976,"line_start":85,"line_end":85,"column_start":1,"column_end":101,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";","highlight_start":1,"highlight_end":101}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_ISSUER_ALT_NAME`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:85:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_ISSUER_ALT_NAME          : &str = \"MBEDTLS_OID_X509_EXT_ISSUER_ALT_NAME\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":7977,"byte_end":8085,"line_start":86,"line_end":86,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:86:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_SUBJECT_DIRECTORY_ATTRS  : &str = \"MBEDTLS_OID_X509_EXT_SUBJECT_DIRECTORY_ATTRS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8086,"byte_end":8192,"line_start":87,"line_end":87,"column_start":1,"column_end":107,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */","highlight_start":1,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_BASIC_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:87:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_BASIC_CONSTRAINTS        : &str = \"MBEDTLS_OID_X509_EXT_BASIC_pub constRAINTS\";        /* Supported */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8216,"byte_end":8321,"line_start":88,"line_end":88,"column_start":1,"column_end":106,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";","highlight_start":1,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NAME_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:88:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NAME_CONSTRAINTS         : &str = \"MBEDTLS_OID_X509_EXT_NAME_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8322,"byte_end":8429,"line_start":89,"line_end":89,"column_start":1,"column_end":108,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";","highlight_start":1,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_POLICY_CONSTRAINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:89:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_POLICY_CONSTRAINTS       : &str = \"MBEDTLS_OID_X509_EXT_POLICY_pub constRAINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8430,"byte_end":8533,"line_start":90,"line_end":90,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:90:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_EXTENDED_KEY_USAGE       : &str = \"MBEDTLS_OID_X509_EXT_EXTENDED_KEY_USAGE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8534,"byte_end":8642,"line_start":91,"line_end":91,"column_start":1,"column_end":109,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";","highlight_start":1,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:91:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_CRL_DISTRIBUTION_POINTS  : &str = \"MBEDTLS_OID_X509_EXT_CRL_DISTRIBUTION_POINTS\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8643,"byte_end":8746,"line_start":92,"line_end":92,"column_start":1,"column_end":104,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";","highlight_start":1,"highlight_end":104}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:92:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_INIHIBIT_ANYPOLICY       : &str = \"MBEDTLS_OID_X509_EXT_INIHIBIT_ANYPOLICY\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8747,"byte_end":8844,"line_start":93,"line_end":93,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_FRESHEST_CRL`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:93:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_FRESHEST_CRL             : &str = \"MBEDTLS_OID_X509_EXT_FRESHEST_CRL\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8845,"byte_end":8942,"line_start":94,"line_end":94,"column_start":1,"column_end":98,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_EXT_NS_CERT_TYPE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:94:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m94\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_EXT_NS_CERT_TYPE             : &str = \"MBEDTLS_OID_X509_EXT_NS_CERT_TYPE\";\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_DER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":8944,"byte_end":9004,"line_start":96,"line_end":96,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_DER`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:96:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_DER                 : i32 = 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_FORMAT_PEM`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9005,"byte_end":9065,"line_start":97,"line_end":97,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_FORMAT_PEM`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:97:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_FORMAT_PEM                 : i32 = 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9067,"byte_end":9127,"line_start":99,"line_end":99,"column_start":1,"column_end":61,"is_primary":true,"text":[{"text":"pub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */","highlight_start":1,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_X509_MAX_DN_NAME_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:99:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_X509_MAX_DN_NAME_SIZE         : i32 = 256; /* Maximum value size of a DN entry */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9332,"byte_end":9408,"line_start":111,"line_end":111,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_OUT_OF_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:111:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_OUT_OF_DATA                      : i32 = -0x0060;  /**< Out of data when parsing an ASN1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9467,"byte_end":9543,"line_start":112,"line_end":112,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_UNEXPECTED_TAG`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:112:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_UNEXPECTED_TAG                   : i32 = -0x0062;  /**< ASN1 tag was of an unexpected value. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9590,"byte_end":9666,"line_start":113,"line_end":113,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_LENGTH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:113:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_LENGTH                   : i32 = -0x0064;  /**< Error when trying to determine the length or invalid l\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9737,"byte_end":9813,"line_start":114,"line_end":114,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_LENGTH_MISMATCH`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:114:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_LENGTH_MISMATCH                  : i32 = -0x0066;  /**< Actual length differs from expected length. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9867,"byte_end":9943,"line_start":115,"line_end":115,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_INVALID_DATA`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:115:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_INVALID_DATA                     : i32 = -0x0068;  /**< Data is invalid. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":9970,"byte_end":10046,"line_start":116,"line_end":116,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_ALLOC_FAILED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:116:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_ALLOC_FAILED                     : i32 = -0x006A;  /**< Memory allocation failed */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10081,"byte_end":10157,"line_start":117,"line_end":117,"column_start":1,"column_end":77,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */","highlight_start":1,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ASN1_BUF_TOO_SMALL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:117:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ASN1_BUF_TOO_SMALL                    : i32 = -0x006C;  /**< Buffer too small when writing ASN.1 data structure. */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BOOLEAN`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10220,"byte_end":10279,"line_start":119,"line_end":119,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BOOLEAN`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:119:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BOOLEAN                 : u8 = 0x01;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_INTEGER`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10280,"byte_end":10339,"line_start":120,"line_end":120,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_INTEGER`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:120:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_INTEGER                 : u8 = 0x02;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BIT_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10340,"byte_end":10399,"line_start":121,"line_end":121,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BIT_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:121:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BIT_STRING              : u8 = 0x03;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OCTET_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10400,"byte_end":10459,"line_start":122,"line_end":122,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OCTET_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:122:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OCTET_STRING            : u8 = 0x04;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_NULL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10460,"byte_end":10519,"line_start":123,"line_end":123,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_NULL`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:123:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_NULL                    : u8 = 0x05;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_OID`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10520,"byte_end":10579,"line_start":124,"line_end":124,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_OID                     : u8 = 0x06;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_OID`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:124:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_OID                     : u8 = 0x06;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_ENUMERATED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10580,"byte_end":10639,"line_start":125,"line_end":125,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_ENUMERATED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:125:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_ENUMERATED              : u8 = 0x0A;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTF8_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10640,"byte_end":10699,"line_start":126,"line_end":126,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTF8_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:126:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTF8_STRING             : u8 = 0x0C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SEQUENCE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10700,"byte_end":10759,"line_start":127,"line_end":127,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SEQUENCE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:127:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SEQUENCE                : u8 = 0x10;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_SET`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10760,"byte_end":10819,"line_start":128,"line_end":128,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_SET                     : u8 = 0x11;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_SET`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:128:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_SET                     : u8 = 0x11;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10820,"byte_end":10879,"line_start":129,"line_end":129,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRINTABLE_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:129:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRINTABLE_STRING        : u8 = 0x13;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_T61_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10880,"byte_end":10939,"line_start":130,"line_end":130,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_T61_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:130:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_T61_STRING              : u8 = 0x14;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_IA5_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":10940,"byte_end":10999,"line_start":131,"line_end":131,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_IA5_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:131:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_IA5_STRING              : u8 = 0x16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UTC_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11000,"byte_end":11059,"line_start":132,"line_end":132,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UTC_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:132:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UTC_TIME                : u8 = 0x17;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11060,"byte_end":11119,"line_start":133,"line_end":133,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_GENERALIZED_TIME`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:133:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_GENERALIZED_TIME        : u8 = 0x18;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11120,"byte_end":11179,"line_start":134,"line_end":134,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_UNIVERSAL_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:134:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_UNIVERSAL_STRING        : u8 = 0x1C;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_BMP_STRING`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11180,"byte_end":11239,"line_start":135,"line_end":135,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_BMP_STRING`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:135:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_BMP_STRING              : u8 = 0x1E;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_PRIMITIVE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11240,"byte_end":11299,"line_start":136,"line_end":136,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_PRIMITIVE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:136:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_PRIMITIVE               : u8 = 0x00;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11300,"byte_end":11359,"line_start":137,"line_end":137,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONSTRUCTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:137:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONSTRUCTED             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11360,"byte_end":11419,"line_start":138,"line_end":138,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_CONTEXT_SPECIFIC`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_CONTEXT_SPECIFIC        : u8 = 0x80;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11421,"byte_end":11480,"line_start":140,"line_end":140,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_CLASS_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_CLASS_MASK          : u8 = 0xC0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11481,"byte_end":11540,"line_start":141,"line_end":141,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_PC_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:141:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_PC_MASK             : u8 = 0x20;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11541,"byte_end":11600,"line_start":142,"line_end":142,"column_start":1,"column_end":60,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;","highlight_start":1,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ASN1_TAG_VALUE_MASK`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:142:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ASN1_TAG_VALUE_MASK          : u8 = 0x1F;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11808,"byte_end":11872,"line_start":150,"line_end":150,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_GENERIC_ERROR`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:150:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_GENERIC_ERROR       : i32 = -0x0001;  /**< Generic error */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":11896,"byte_end":11960,"line_start":151,"line_end":151,"column_start":1,"column_end":65,"is_primary":true,"text":[{"text":"pub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */","highlight_start":1,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:151:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub const MBEDTLS_ERR_ERROR_CORRUPTION_DETECTED : i32 = -0x006E;  /**< This is a bug in the library */\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `print`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/../x509/x509_header.rs","byte_start":12007,"byte_end":12012,"line_start":153,"line_end":153,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"pub fn print(){","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `print`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/../x509/x509_header.rs:153:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn print(){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `print`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":437,"byte_end":442,"line_start":15,"line_end":15,"column_start":8,"column_end":13,"is_primary":true,"text":[{"text":"pub fn print(){","highlight_start":8,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `print`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:15:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn print(){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_asn1_sequence`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":508,"byte_end":529,"line_start":21,"line_end":21,"column_start":12,"column_end":33,"is_primary":true,"text":[{"text":"pub struct mbedtls_asn1_sequence","highlight_start":12,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_asn1_sequence`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:21:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_asn1_sequence\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_len`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":922,"byte_end":942,"line_start":33,"line_end":33,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, len: &mut usize ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_len`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:33:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, len: &mut usize ) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_tag`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":2884,"byte_end":2904,"line_start":93,"line_end":93,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, len: &mut usize, tag: u8) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_tag`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:93:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, len: &mut usize, tag: u8) -> i32 {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_bool`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":3382,"byte_end":3403,"line_start":109,"line_end":109,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_bool( p: &mut p, end: &usize, val: &mut usize) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_bool`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:109:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_bool( p: &mut p, end: &usize, val: &mut usize) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `asn1_get_tagged_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":3961,"byte_end":3980,"line_start":131,"line_end":131,"column_start":8,"column_end":27,"is_primary":true,"text":[{"text":"pub fn asn1_get_tagged_int( p: &mut p, end: &usize, tag: u8, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `asn1_get_tagged_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:131:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn asn1_get_tagged_int( p: &mut p, end: &usize, tag: u8, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":4791,"byte_end":4811,"line_start":165,"line_end":165,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:165:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_enum`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":5092,"byte_end":5113,"line_start":172,"line_end":172,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_enum( p: &mut p, end: &usize, val: &mut i32) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_enum`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:172:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_enum( p: &mut p, end: &usize, val: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_bitstring_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":5397,"byte_end":5428,"line_start":179,"line_end":179,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_bitstring_null( p: &mut p, end: &usize, len : &mut usize ) -> i32 {","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_bitstring_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:179:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_bitstring_null( p: &mut p, end: &usize, len : &mut usize ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":6028,"byte_end":6048,"line_start":203,"line_end":203,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:203:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/../x509/asn1parse.rs","byte_start":7235,"byte_end":7260,"line_start":251,"line_end":251,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg_null(  p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/../x509/asn1parse.rs:251:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg_null(  p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `nop`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":270,"byte_end":273,"line_start":15,"line_end":15,"column_start":4,"column_end":7,"is_primary":true,"text":[{"text":"fn nop() {}","highlight_start":4,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `nop`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:15:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn nop() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `p`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":292,"byte_end":293,"line_start":18,"line_end":18,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"pub struct p","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `p`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:18:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct p\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\n"}
{"message":"associated function is never used: `copy`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":361,"byte_end":365,"line_start":25,"line_end":25,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn copy(&self) -> p {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `copy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:25:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn copy(&self) -> p {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_md_info_t`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":498,"byte_end":515,"line_start":31,"line_end":31,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_md_info_t","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_md_info_t`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:31:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_md_info_t\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `copy`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":682,"byte_end":686,"line_start":43,"line_end":43,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn copy(&self) -> md_header::mbedtls_md_type_t {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `copy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:43:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn copy(&self) -> md_header::mbedtls_md_type_t {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_x509_buf`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1651,"byte_end":1667,"line_start":59,"line_end":59,"column_start":12,"column_end":28,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_buf","highlight_start":12,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_x509_buf`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:59:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_buf\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `copy`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1758,"byte_end":1762,"line_start":67,"line_end":67,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    pub fn copy(&self) -> mbedtls_x509_buf {","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `copy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:67:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn copy(&self) -> mbedtls_x509_buf {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_x509_name`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1911,"byte_end":1928,"line_start":73,"line_end":73,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_name","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_x509_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:73:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"associated function is never used: `new`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":2098,"byte_end":2101,"line_start":82,"line_end":82,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn new() -> Box<mbedtls_x509_name> {","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated function is never used: `new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:82:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn new() -> Box<mbedtls_x509_name> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_pk_rsassa_pss_options`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":2641,"byte_end":2670,"line_start":104,"line_end":104,"column_start":12,"column_end":41,"is_primary":true,"text":[{"text":"pub struct mbedtls_pk_rsassa_pss_options","highlight_start":12,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_pk_rsassa_pss_options`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:104:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_pk_rsassa_pss_options\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `tm`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":2772,"byte_end":2774,"line_start":111,"line_end":111,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"pub struct tm","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `tm`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:111:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct tm\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\n"}
{"message":"struct is never constructed: `mbedtls_x509_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3056,"byte_end":3073,"line_start":129,"line_end":129,"column_start":12,"column_end":29,"is_primary":true,"text":[{"text":"pub struct mbedtls_x509_time","highlight_start":12,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: struct is never constructed: `mbedtls_x509_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:129:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct mbedtls_x509_time\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_len`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3393,"byte_end":3413,"line_start":143,"line_end":143,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, y: &mut usize ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_len`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:143:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_len(p: &mut p, end: &usize, y: &mut usize ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_tag`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3528,"byte_end":3548,"line_start":147,"line_end":147,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, y: &mut usize, z: u8) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_tag`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:147:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_tag( p: &mut p, end: &usize, y: &mut usize, z: u8) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3674,"byte_end":3694,"line_start":151,"line_end":151,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, y: &mut i32 ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:151:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_int( p: &mut p, end: &usize, y: &mut i32 ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_bitstring_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3811,"byte_end":3842,"line_start":155,"line_end":155,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"pub fn  mbedtls_asn1_get_bitstring_null(p: &mut p, end: &usize, z: &mut usize ) -> i32 {","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_bitstring_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:155:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_asn1_get_bitstring_null(p: &mut p, end: &usize, z: &mut usize ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":3969,"byte_end":3989,"line_start":158,"line_end":158,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, y: &mut mbedtls_x509_buf, z: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:158:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg( p: &mut p, end: &mut usize, y: &mut mbedtls_x509_buf, z: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_asn1_get_alg_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4151,"byte_end":4176,"line_start":162,"line_end":162,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_asn1_get_alg_null( p: &mut p, end: &mut usize, y: &mut mbedtls_x509_buf ) -> i32 {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_asn1_get_alg_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:162:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_asn1_get_alg_null( p: &mut p, end: &mut usize, y: &mut mbedtls_x509_buf ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_oid_get_md_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4320,"byte_end":4342,"line_start":172,"line_end":172,"column_start":8,"column_end":30,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {","highlight_start":8,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_oid_get_md_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:172:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_md_alg( x: &mut mbedtls_x509_buf, y: &mut md_header::mbedtls_md_type_t ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_oid_get_sig_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4447,"byte_end":4470,"line_start":176,"line_end":176,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtls_pk_type_t ) -> i32 {","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_oid_get_sig_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:176:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_oid_get_sig_alg(sig_oid: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, pk_alg: &mut pk_header::mbedtl\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_oid_get_sig_alg_desc`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4623,"byte_end":4651,"line_start":179,"line_end":179,"column_start":9,"column_end":37,"is_primary":true,"text":[{"text":"pub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {","highlight_start":9,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_oid_get_sig_alg_desc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:179:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn  mbedtls_oid_get_sig_alg_desc(sig_oid: &mut mbedtls_x509_buf, desc: &mut p) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_oid_get_attr_short_name`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4730,"byte_end":4761,"line_start":182,"line_end":182,"column_start":8,"column_end":39,"is_primary":true,"text":[{"text":"pub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {","highlight_start":8,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_oid_get_attr_short_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:182:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_oid_get_attr_short_name( x: &mut mbedtls_x509_buf, y: &mut String ) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_md_info_from_type`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4844,"byte_end":4869,"line_start":187,"line_end":187,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_md_info_from_type( md_type : md_header::mbedtls_md_type_t ) -> mbedtls_md_info_t {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_md_info_from_type`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:187:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_md_info_from_type( md_type : md_header::mbedtls_md_type_t ) -> mbedtls_md_info_t {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_serial`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":7609,"byte_end":7632,"line_start":264,"line_end":264,"column_start":8,"column_end":31,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_serial(p: &mut p, end: &usize, serial: &mut mbedtls_x509_buf) -> i32 {","highlight_start":8,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_serial`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:264:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_serial(p: &mut p, end: &usize, serial: &mut mbedtls_x509_buf) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_alg_null`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":8686,"byte_end":8711,"line_start":293,"line_end":293,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_alg_null(p: &mut p, end: &mut usize, serial: &mut mbedtls_x509_buf) -> i32 {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_alg_null`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:293:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_alg_null(p: &mut p, end: &mut usize, serial: &mut mbedtls_x509_buf) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":9163,"byte_end":9183,"line_start":307,"line_end":307,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_alg(p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:307:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_alg(p: &mut p, end: &mut usize, alg: &mut mbedtls_x509_buf, params: &mut mbedtls_x509_buf) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_get_hash_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":9662,"byte_end":9679,"line_start":321,"line_end":321,"column_start":8,"column_end":25,"is_primary":true,"text":[{"text":"pub fn x509_get_hash_alg(alg: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t) -> i32{               ","highlight_start":8,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_get_hash_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:321:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_get_hash_alg(alg: &mut mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t) -> i32{               \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_rsassa_pss_params`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":11406,"byte_end":11440,"line_start":370,"line_end":370,"column_start":8,"column_end":42,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_rsassa_pss_params(params: &mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, ","highlight_start":8,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_rsassa_pss_params`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:370:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_rsassa_pss_params(params: &mbedtls_x509_buf, md_alg: &mut md_header::mbedtls_md_type_t, \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_get_attr_type_value`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":15601,"byte_end":15625,"line_start":482,"line_end":482,"column_start":8,"column_end":32,"is_primary":true,"text":[{"text":"pub fn x509_get_attr_type_value(p: &mut p, end: &mut usize, cur: &mut mbedtls_x509_name) -> i32 {","highlight_start":8,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_get_attr_type_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:482:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_get_attr_type_value(p: &mut p, end: &mut usize, cur: &mut mbedtls_x509_name) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_name`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":17906,"byte_end":17927,"line_start":540,"line_end":540,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_name(p: &mut p, end: &usize, mut cur: &mut mbedtls_x509_name) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:540:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m540\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_name(p: &mut p, end: &usize, mut cur: &mut mbedtls_x509_name) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_parse_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":19235,"byte_end":19249,"line_start":587,"line_end":587,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"pub fn x509_parse_int(p: &mut p, n: usize, res: &mut i32) -> i32 {","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_parse_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:587:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_parse_int(p: &mut p, n: usize, res: &mut i32) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_date_is_valid`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":19734,"byte_end":19752,"line_start":606,"line_end":606,"column_start":8,"column_end":26,"is_primary":true,"text":[{"text":"pub fn x509_date_is_valid(t: &mbedtls_x509_time) -> i32 {","highlight_start":8,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_date_is_valid`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:606:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m606\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_date_is_valid(t: &mbedtls_x509_time) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_parse_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":20697,"byte_end":20712,"line_start":647,"line_end":647,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn x509_parse_time(p: &mut p, mut len: usize, yearlen: usize, tm: &mut mbedtls_x509_time) -> i32 {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_parse_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:647:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m647\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_parse_time(p: &mut p, mut len: usize, yearlen: usize, tm: &mut mbedtls_x509_time) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":22082,"byte_end":22103,"line_start":701,"line_end":701,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_time(p: &mut p, end: &usize, tm: &mut mbedtls_x509_time) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:701:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_time(p: &mut p, end: &usize, tm: &mut mbedtls_x509_time) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_sig`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":23052,"byte_end":23072,"line_start":733,"line_end":733,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_sig(p: &mut p, end: &usize, sig: &mut mbedtls_x509_buf) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_sig`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:733:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m733\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_sig(p: &mut p, end: &usize, sig: &mut mbedtls_x509_buf) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_sig_alg`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":23845,"byte_end":23869,"line_start":760,"line_end":760,"column_start":8,"column_end":32,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_sig_alg( sig_oid: &mut mbedtls_x509_buf, sig_params: &mut mbedtls_x509_buf,","highlight_start":8,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_sig_alg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:760:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m760\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_sig_alg( sig_oid: &mut mbedtls_x509_buf, sig_params: &mut mbedtls_x509_buf,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_get_ext`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":25282,"byte_end":25302,"line_start":797,"line_end":797,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_get_ext(p: &mut p, end: &mut usize, ext: &mut mbedtls_x509_buf, tag: u8) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_get_ext`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:797:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_get_ext(p: &mut p, end: &mut usize, ext: &mut mbedtls_x509_buf, tag: u8) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_dn_gets`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":26418,"byte_end":26438,"line_start":824,"line_end":824,"column_start":8,"column_end":28,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_dn_gets(buf : &mut p, size: usize, dn: &mut mbedtls_x509_name) -> i32 {","highlight_start":8,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_dn_gets`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:824:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m824\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_dn_gets(buf : &mut p, size: usize, dn: &mut mbedtls_x509_name) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_serial_gets`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":29869,"byte_end":29893,"line_start":951,"line_end":951,"column_start":8,"column_end":32,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_serial_gets(buf: &mut p, size: usize, serial: &mut mbedtls_x509_buf) -> i32 {","highlight_start":8,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_serial_gets`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:951:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m951\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_serial_gets(buf: &mut p, size: usize, serial: &mut mbedtls_x509_buf) -> i32 {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_sig_alg_gets`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":31421,"byte_end":31446,"line_start":1007,"line_end":1007,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_sig_alg_gets(buf: &mut p, size: usize, sig_oid: &mut mbedtls_x509_buf, ","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_sig_alg_gets`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1007:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1007\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_sig_alg_gets(buf: &mut p, size: usize, sig_oid: &mut mbedtls_x509_buf, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_key_size_helper`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":33783,"byte_end":33811,"line_start":1084,"line_end":1084,"column_start":8,"column_end":36,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_key_size_helper(buf: &mut p, buf_size: usize, name: &mut p) -> i32 {","highlight_start":8,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_key_size_helper`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1084:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1084\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_key_size_helper(buf: &mut p, buf_size: usize, name: &mut p) -> i32 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_get_current_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":34508,"byte_end":34529,"line_start":1111,"line_end":1111,"column_start":8,"column_end":29,"is_primary":true,"text":[{"text":"pub fn x509_get_current_time(now: &mut mbedtls_x509_time) -> i32 {","highlight_start":8,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_get_current_time`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1111:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_get_current_time(now: &mut mbedtls_x509_time) -> i32 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `x509_check_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":35181,"byte_end":35196,"line_start":1130,"line_end":1130,"column_start":8,"column_end":23,"is_primary":true,"text":[{"text":"pub fn x509_check_time( before: &mbedtls_x509_time , after: &mbedtls_x509_time ) -> i32 {","highlight_start":8,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `x509_check_time`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1130:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn x509_check_time( before: &mbedtls_x509_time , after: &mbedtls_x509_time ) -> i32 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_time_is_past`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":36317,"byte_end":36342,"line_start":1170,"line_end":1170,"column_start":8,"column_end":33,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_time_is_past( to: &mbedtls_x509_time ) -> i32 {","highlight_start":8,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_time_is_past`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1170:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_time_is_past( to: &mbedtls_x509_time ) -> i32 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_x509_time_is_future`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":36688,"byte_end":36715,"line_start":1182,"line_end":1182,"column_start":8,"column_end":35,"is_primary":true,"text":[{"text":"pub fn mbedtls_x509_time_is_future( from: &mbedtls_x509_time ) -> i32 {","highlight_start":8,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_x509_time_is_future`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:1182:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub fn mbedtls_x509_time_is_future( from: &mbedtls_x509_time ) -> i32 {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_MPI_FILE_IO_ERROR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":49,"byte_end":119,"line_start":5,"line_end":5,"column_start":1,"column_end":71,"is_primary":true,"text":[{"text":"const MBEDTLS_ERR_MPI_FILE_IO_ERROR : i32                  =  -0x0002; /**< An error occurred while reading from or writing to a file. */","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_MPI_FILE_IO_ERROR`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_ERR_MPI_FILE_IO_ERROR : i32                  =  -0x0002; /**< An error occurred while reading from or writing to a file. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":432,"byte_end":502,"line_start":8,"line_end":8,"column_start":1,"column_end":71,"is_primary":true,"text":[{"text":"const MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL : i32               =  -0x0008; /**< The buffer is too small to write to. */","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_ERR_MPI_BUFFER_TOO_SMALL : i32               =  -0x0008; /**< The buffer is too small to write to. */\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_MPI_DIVISION_BY_ZERO`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":690,"byte_end":760,"line_start":10,"line_end":10,"column_start":1,"column_end":71,"is_primary":true,"text":[{"text":"const MBEDTLS_ERR_MPI_DIVISION_BY_ZERO  : i32              =  -0x000C;  /**< The input argument for division is zero, which is not allowed. */","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_MPI_DIVISION_BY_ZERO`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:10:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_ERR_MPI_DIVISION_BY_ZERO  : i32              =  -0x000C;  /**< The input argument for division is zero, which is not allowe\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_ERR_MPI_NOT_ACCEPTABLE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":833,"byte_end":903,"line_start":11,"line_end":11,"column_start":1,"column_end":71,"is_primary":true,"text":[{"text":"const MBEDTLS_ERR_MPI_NOT_ACCEPTABLE  : i32                =  -0x000E;  /**< The input arguments are not acceptable. */","highlight_start":1,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_ERR_MPI_NOT_ACCEPTABLE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_ERR_MPI_NOT_ACCEPTABLE  : i32                =  -0x000E;  /**< The input arguments are not acceptable. */\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_WINDOW_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1129,"byte_end":1196,"line_start":15,"line_end":15,"column_start":1,"column_end":68,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_WINDOW_SIZE : i32                        =  6   ;","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_WINDOW_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_WINDOW_SIZE : i32                        =  6   ;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_MAX_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1197,"byte_end":1264,"line_start":16,"line_end":16,"column_start":1,"column_end":68,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_MAX_SIZE : i32                           =  1024;","highlight_start":1,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_MAX_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:16:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_MAX_SIZE : i32                           =  1024;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_MAX_BITS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1265,"byte_end":1351,"line_start":17,"line_end":17,"column_start":1,"column_end":87,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_MAX_BITS : i32                           = 8 * MBEDTLS_MPI_MAX_SIZE;","highlight_start":1,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_MAX_BITS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_MAX_BITS : i32                           = 8 * MBEDTLS_MPI_MAX_SIZE;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_MAX_BITS_SCALE100`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1352,"byte_end":1442,"line_start":18,"line_end":18,"column_start":1,"column_end":91,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_MAX_BITS_SCALE100 : i32                  =  100 * MBEDTLS_MPI_MAX_BITS ;","highlight_start":1,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_MAX_BITS_SCALE100`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_MAX_BITS_SCALE100 : i32                  =  100 * MBEDTLS_MPI_MAX_BITS ;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_LN_2_DIV_LN_10_SCALE100`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1443,"byte_end":1508,"line_start":19,"line_end":19,"column_start":1,"column_end":66,"is_primary":true,"text":[{"text":"const MBEDTLS_LN_2_DIV_LN_10_SCALE100 : i32                = 332;","highlight_start":1,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_LN_2_DIV_LN_10_SCALE100`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:19:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_LN_2_DIV_LN_10_SCALE100 : i32                = 332;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_RW_BUFFER_SIZE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1509,"byte_end":1685,"line_start":20,"line_end":20,"column_start":1,"column_end":177,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_RW_BUFFER_SIZE : i32                     = ((MBEDTLS_MPI_MAX_BITS_SCALE100 + MBEDTLS_LN_2_DIV_LN_10_SCALE100 - 1) / MBEDTLS_LN_2_DIV_LN_10_SCALE100) + 10 + 6;","highlight_start":1,"highlight_end":177}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_RW_BUFFER_SIZE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_RW_BUFFER_SIZE : i32                     = ((MBEDTLS_MPI_MAX_BITS_SCALE100 + MBEDTLS_LN_2_DIV_LN_10_SCALE100 - 1) / MBEDTLS_LN_2_DIV_LN_10_SCALE100) + 10 + 6;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_GEN_PRIME_FLAG_DH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1756,"byte_end":1814,"line_start":22,"line_end":22,"column_start":1,"column_end":59,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_GEN_PRIME_FLAG_DH : i32\t\t\t\t   =  0x0001;","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_GEN_PRIME_FLAG_DH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:22:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_GEN_PRIME_FLAG_DH : i32                   =  0x0001;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":1815,"byte_end":1876,"line_start":23,"line_end":23,"column_start":1,"column_end":62,"is_primary":true,"text":[{"text":"const MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR : i32\t\t\t   = 0x0002;","highlight_start":1,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst MBEDTLS_MPI_GEN_PRIME_FLAG_LOW_ERR : i32               = 0x0002;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `biH`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2103,"byte_end":2131,"line_start":37,"line_end":37,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"const biH: usize = ciL << 2;","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `biH`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:37:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst biH: usize = ciL << 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `CHARS_TO_LIMBS`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2262,"byte_end":2276,"line_start":44,"line_end":44,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn CHARS_TO_LIMBS(i: usize) -> usize {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `CHARS_TO_LIMBS`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:44:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn CHARS_TO_LIMBS(i: usize) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_shrink`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":3170,"byte_end":3188,"line_start":89,"line_end":89,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shrink( mut X: &mut mbedtls_mpi, nblimbs: usize ) -> i32","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_shrink`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:89:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shrink( mut X: &mut mbedtls_mpi, nblimbs: usize ) -> i32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_swap`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":4439,"byte_end":4455,"line_start":157,"line_end":157,"column_start":4,"column_end":20,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )","highlight_start":4,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_swap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:157:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_safe_cond_assign`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":4955,"byte_end":4975,"line_start":180,"line_end":180,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn mpi_safe_cond_assign( n: usize, dest: &mut Vec<mbedtls_mpi_uint>, src: &Vec<mbedtls_mpi_uint>, assign: u8 )","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_safe_cond_assign`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:180:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_safe_cond_assign( n: usize, dest: &mut Vec<mbedtls_mpi_uint>, src: &Vec<mbedtls_mpi_uint>, assign: u8 )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_safe_cond_assign`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5212,"byte_end":5240,"line_start":188,"line_end":188,"column_start":4,"column_end":32,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32","highlight_start":4,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_safe_cond_assign`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:188:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_safe_cond_swap`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5702,"byte_end":5728,"line_start":206,"line_end":206,"column_start":4,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32","highlight_start":4,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_safe_cond_swap`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:206:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_get_bit`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":6814,"byte_end":6833,"line_start":254,"line_end":254,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_get_bit(  X: &mbedtls_mpi, pos: usize ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_get_bit`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:254:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_get_bit(  X: &mbedtls_mpi, pos: usize ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `GET_BYTE`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":6997,"byte_end":7005,"line_start":261,"line_end":261,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              ","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `GET_BYTE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:261:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_set_bit`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7151,"byte_end":7170,"line_start":265,"line_end":265,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_set_bit( mut X: &mut mbedtls_mpi, pos: usize, val: u8 ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_set_bit`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:265:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_set_bit( mut X: &mut mbedtls_mpi, pos: usize, val: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_lsb`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7646,"byte_end":7661,"line_start":288,"line_end":288,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_lsb( X: &mbedtls_mpi) -> usize","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_lsb`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:288:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_lsb( X: &mbedtls_mpi) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_clz`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":8021,"byte_end":8032,"line_start":309,"line_end":309,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn mbedtls_clz( x: mbedtls_mpi_uint ) -> usize","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_clz`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:309:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_clz( x: mbedtls_mpi_uint ) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_bitlen`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":8286,"byte_end":8304,"line_start":322,"line_end":322,"column_start":4,"column_end":22,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_bitlen( X: &mbedtls_mpi ) -> usize","highlight_start":4,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_bitlen`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:322:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_bitlen( X: &mbedtls_mpi ) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_size`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":8602,"byte_end":8618,"line_start":342,"line_end":342,"column_start":4,"column_end":20,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_size( X: &mbedtls_mpi ) -> usize","highlight_start":4,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_size`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:342:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_size( X: &mbedtls_mpi ) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_write_hlp`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16996,"byte_end":17009,"line_start":677,"line_end":677,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn mpi_write_hlp( mut X: &mut mbedtls_mpi, radix: i32, buf: &mut Vec<u8>, buflen: usize) -> i32","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_write_hlp`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:677:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m677\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_write_hlp( mut X: &mut mbedtls_mpi, radix: i32, buf: &mut Vec<u8>, buflen: usize) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_int_div_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":18117,"byte_end":18136,"line_start":716,"line_end":716,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_int_div_int(u1: mbedtls_mpi_uint, u0: mbedtls_mpi_uint, d: mbedtls_mpi_uint, r: Option<&mut mbedtls_mpi_uint>) -> mbedtls_mpi_uint","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_int_div_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:716:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m716\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_int_div_int(u1: mbedtls_mpi_uint, u0: mbedtls_mpi_uint, d: mbedtls_mpi_uint, r: Option<&mut mbedtls_mpi_uint>) -> mbedtls_mpi_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `sh`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":18897,"byte_end":18899,"line_start":741,"line_end":741,"column_start":4,"column_end":6,"is_primary":true,"text":[{"text":"fn sh(biLvar: usize) -> usize {","highlight_start":4,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `sh`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:741:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m741\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn sh(biLvar: usize) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_cmp_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":18990,"byte_end":19009,"line_start":747,"line_end":747,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_int( X: &mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_cmp_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:747:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m747\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_int( X: &mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_mod_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":20040,"byte_end":20059,"line_start":792,"line_end":792,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_int( r: &mut mbedtls_mpi_uint, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_mod_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:792:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m792\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_int( r: &mut mbedtls_mpi_uint, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_div_int`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":20996,"byte_end":21015,"line_start":835,"line_end":835,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_div_int`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:835:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m835\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_div_mpi`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21439,"byte_end":21458,"line_start":847,"line_end":847,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_div_mpi`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:847:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_shift_l`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":25508,"byte_end":25527,"line_start":982,"line_end":982,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_l(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_shift_l`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:982:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m982\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shift_l(mut X: &mut mbedtls_mpi, count: usize) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_shift_r`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":26422,"byte_end":26441,"line_start":1027,"line_end":1027,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_r(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_shift_r`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1027:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1027\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shift_r(mut X: &mut mbedtls_mpi, count: usize) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_gcd`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27228,"byte_end":27243,"line_start":1066,"line_end":1066,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_gcd`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1066:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1066\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_fill_random`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":28772,"byte_end":28795,"line_start":1116,"line_end":1116,"column_start":4,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_fill_random( mut X: &mut mbedtls_mpi, size: usize, ","highlight_start":4,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_fill_random`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1116:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_fill_random( mut X: &mut mbedtls_mpi, size: usize, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_exp_mod`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29386,"byte_end":29405,"line_start":1134,"line_end":1134,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_exp_mod`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1134:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_montg_init`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":34759,"byte_end":34773,"line_start":1334,"line_end":1334,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn mpi_montg_init( mm: &mut mbedtls_mpi_uint,  N: &mbedtls_mpi )","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_montg_init`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1334:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montg_init( mm: &mut mbedtls_mpi_uint,  N: &mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_montmul`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35078,"byte_end":35089,"line_start":1350,"line_end":1350,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_montmul`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1350:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_montred`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36044,"byte_end":36055,"line_start":1383,"line_end":1383,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_montred`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1383:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_mod_mpi`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36364,"byte_end":36383,"line_start":1392,"line_end":1392,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_mod_mpi`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1392:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_bigendian_to_host`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":37120,"byte_end":37141,"line_start":1415,"line_end":1415,"column_start":4,"column_end":25,"is_primary":true,"text":[{"text":"fn mpi_bigendian_to_host( p: &mut Vec<mbedtls_mpi_uint>, limbs: usize )","highlight_start":4,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_bigendian_to_host`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1415:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_bigendian_to_host( p: &mut Vec<mbedtls_mpi_uint>, limbs: usize )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_uint_bigendian_to_host_c`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":37689,"byte_end":37717,"line_start":1433,"line_end":1433,"column_start":4,"column_end":32,"is_primary":true,"text":[{"text":"fn mpi_uint_bigendian_to_host_c( x: mbedtls_mpi_uint ) -> mbedtls_mpi_uint","highlight_start":4,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_uint_bigendian_to_host_c`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1433:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_uint_bigendian_to_host_c( x: mbedtls_mpi_uint ) -> mbedtls_mpi_uint\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_inv_mod`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":37996,"byte_end":38015,"line_start":1445,"line_end":1445,"column_start":4,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":4,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_inv_mod`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1445:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `small_prime`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":42465,"byte_end":43613,"line_start":1558,"line_end":1580,"column_start":1,"column_end":3,"is_primary":true,"text":[{"text":"const small_prime: [i64; 168] = [","highlight_start":1,"highlight_end":34},{"text":"        3,    5,    7,   11,   13,   17,   19,   23,","highlight_start":1,"highlight_end":53},{"text":"       29,   31,   37,   41,   43,   47,   53,   59,","highlight_start":1,"highlight_end":53},{"text":"       61,   67,   71,   73,   79,   83,   89,   97,","highlight_start":1,"highlight_end":53},{"text":"      101,  103,  107,  109,  113,  127,  131,  137,","highlight_start":1,"highlight_end":53},{"text":"      139,  149,  151,  157,  163,  167,  173,  179,","highlight_start":1,"highlight_end":53},{"text":"      181,  191,  193,  197,  199,  211,  223,  227,","highlight_start":1,"highlight_end":53},{"text":"      229,  233,  239,  241,  251,  257,  263,  269,","highlight_start":1,"highlight_end":53},{"text":"      271,  277,  281,  283,  293,  307,  311,  313,","highlight_start":1,"highlight_end":53},{"text":"      317,  331,  337,  347,  349,  353,  359,  367,","highlight_start":1,"highlight_end":53},{"text":"      373,  379,  383,  389,  397,  401,  409,  419,","highlight_start":1,"highlight_end":53},{"text":"      421,  431,  433,  439,  443,  449,  457,  461,","highlight_start":1,"highlight_end":53},{"text":"      463,  467,  479,  487,  491,  499,  503,  509,","highlight_start":1,"highlight_end":53},{"text":"      521,  523,  541,  547,  557,  563,  569,  571,","highlight_start":1,"highlight_end":53},{"text":"      577,  587,  593,  599,  601,  607,  613,  617,","highlight_start":1,"highlight_end":53},{"text":"      619,  631,  641,  643,  647,  653,  659,  661,","highlight_start":1,"highlight_end":53},{"text":"      673,  677,  683,  691,  701,  709,  719,  727,","highlight_start":1,"highlight_end":53},{"text":"      733,  739,  743,  751,  757,  761,  769,  773,","highlight_start":1,"highlight_end":53},{"text":"      787,  797,  809,  811,  821,  823,  827,  829,","highlight_start":1,"highlight_end":53},{"text":"      839,  853,  857,  859,  863,  877,  881,  883,","highlight_start":1,"highlight_end":53},{"text":"      887,  907,  911,  919,  929,  937,  941,  947,","highlight_start":1,"highlight_end":53},{"text":"      953,  967,  971,  977,  983,  991,  997, -103","highlight_start":1,"highlight_end":52},{"text":"];      ","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `small_prime`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1558:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1558\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst small_prime: [i64; 168] = [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1559\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        3,    5,    7,   11,   13,   17,   19,   23,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1560\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m       29,   31,   37,   41,   43,   47,   53,   59,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1561\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m       61,   67,   71,   73,   79,   83,   89,   97,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1579\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      953,  967,  971,  977,  983,  991,  997, -103\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1580\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m];      \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|__^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_check_small_factors`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":43624,"byte_end":43647,"line_start":1582,"line_end":1582,"column_start":4,"column_end":27,"is_primary":true,"text":[{"text":"fn mpi_check_small_factors( X: &mbedtls_mpi ) -> i32","highlight_start":4,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_check_small_factors`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1582:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_check_small_factors( X: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mpi_miller_rabin`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44164,"byte_end":44180,"line_start":1606,"line_end":1606,"column_start":4,"column_end":20,"is_primary":true,"text":[{"text":"fn mpi_miller_rabin( X: &mbedtls_mpi, rounds: usize,","highlight_start":4,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mpi_miller_rabin`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1606:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1606\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_miller_rabin( X: &mbedtls_mpi, rounds: usize,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_is_prime`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":46885,"byte_end":46905,"line_start":1684,"line_end":1684,"column_start":4,"column_end":24,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime( X: &mbedtls_mpi, f_rng: fn (&mut Vec<u8>, &mut [u64], usize) -> i32, p_rng: &mut Vec<u8> ) -> i32","highlight_start":4,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_is_prime`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1684:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1684\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_is_prime( X: &mbedtls_mpi, f_rng: fn (&mut Vec<u8>, &mut [u64], usize) -> i32, p_rng: &mut Vec<u8> ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_gen_prime`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":47070,"byte_end":47091,"line_start":1689,"line_end":1689,"column_start":4,"column_end":25,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gen_prime( mut X: &mut mbedtls_mpi, nbits: usize, flags: i32,","highlight_start":4,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_gen_prime`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1689:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gen_prime( mut X: &mut mbedtls_mpi, nbits: usize, flags: i32,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `GCD_PAIR_COUNT`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50602,"byte_end":50635,"line_start":1793,"line_end":1793,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"const GCD_PAIR_COUNT : usize = 3;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `GCD_PAIR_COUNT`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1793:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1793\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst GCD_PAIR_COUNT : usize = 3;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"constant is never used: `gcd_pairs`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50636,"byte_end":50763,"line_start":1794,"line_end":1798,"column_start":1,"column_end":4,"is_primary":true,"text":[{"text":"const gcd_pairs: [[i64; 3]; GCD_PAIR_COUNT] = ","highlight_start":1,"highlight_end":47},{"text":" [  [ 693, 609, 21 ],","highlight_start":1,"highlight_end":22},{"text":"    [ 1764, 868, 28 ],","highlight_start":1,"highlight_end":23},{"text":"    [ 768454923, 542167814, 1 ]","highlight_start":1,"highlight_end":32},{"text":" ];                                      ","highlight_start":1,"highlight_end":4}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant is never used: `gcd_pairs`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1794:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst gcd_pairs: [[i64; 3]; GCD_PAIR_COUNT] = \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1795\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m [  [ 693, 609, 21 ],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1796\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [ 1764, 868, 28 ],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [ 768454923, 542167814, 1 ]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1798\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m ];                                      \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|___^\u001b[0m\n\n"}
{"message":"function is never used: `mbedtls_mpi_is_prime_ext`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50805,"byte_end":50829,"line_start":1799,"line_end":1799,"column_start":4,"column_end":28,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime_ext( X: &mbedtls_mpi, rounds: i32,","highlight_start":4,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function is never used: `mbedtls_mpi_is_prime_ext`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1799:4\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1799\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_is_prime_ext( X: &mbedtls_mpi, rounds: i32,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_NONE` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":762,"byte_end":777,"line_start":45,"line_end":45,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"mbedtls_md_none","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_NONE` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:45:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_NONE => return md_header::mbedtls_md_type_t::MBEDTLS_MD_NONE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_none`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":847,"byte_end":861,"line_start":46,"line_end":46,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"mbedtls_md_md2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:46:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD2 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD2,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md2`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":930,"byte_end":944,"line_start":47,"line_end":47,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"mbedtls_md_md4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD4` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD4 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD4,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md4`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1013,"byte_end":1027,"line_start":48,"line_end":48,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":"mbedtls_md_md5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD5` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:48:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_MD5 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_MD5,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md5`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1096,"byte_end":1111,"line_start":49,"line_end":49,"column_start":13,"column_end":28,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,","highlight_start":13,"highlight_end":28}],"label":null,"suggested_replacement":"mbedtls_md_sha1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:49:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA1 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA1,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha1`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA224` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1181,"byte_end":1198,"line_start":50,"line_end":50,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"mbedtls_md_sha224","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA224` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:50:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA224 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA224,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha224`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA256` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1270,"byte_end":1287,"line_start":51,"line_end":51,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"mbedtls_md_sha256","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA256` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA256 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA256,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha256`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA384` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1359,"byte_end":1376,"line_start":52,"line_end":52,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"mbedtls_md_sha384","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA384` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:52:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA384 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA384,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha384`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA512` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1448,"byte_end":1465,"line_start":53,"line_end":53,"column_start":13,"column_end":30,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,","highlight_start":13,"highlight_end":30}],"label":null,"suggested_replacement":"mbedtls_md_sha512","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA512` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:53:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_SHA512 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_SHA512,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha512`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_RIPEMD160` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":1537,"byte_end":1557,"line_start":54,"line_end":54,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"mbedtls_md_ripemd160","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_RIPEMD160` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:54:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            MBEDTLS_MD_RIPEMD160 => return md_header::mbedtls_md_type_t::MBEDTLS_MD_RIPEMD160,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_ripemd160`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_NONE` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":4963,"byte_end":4978,"line_start":189,"line_end":189,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_NONE => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"mbedtls_md_none","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_NONE` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:189:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_NONE => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_none`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5207,"byte_end":5221,"line_start":196,"line_end":196,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"mbedtls_md_md2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:196:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD2 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md2`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD4` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5450,"byte_end":5464,"line_start":203,"line_end":203,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"mbedtls_md_md4","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD4` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:203:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD4 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md4`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_MD5` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5693,"byte_end":5707,"line_start":210,"line_end":210,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":"mbedtls_md_md5","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_MD5` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:210:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_MD5 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_md5`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":5936,"byte_end":5951,"line_start":217,"line_end":217,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"mbedtls_md_sha1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:217:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA1 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha1`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA224` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6182,"byte_end":6199,"line_start":224,"line_end":224,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"mbedtls_md_sha224","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA224` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:224:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA224 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha224`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA256` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6434,"byte_end":6451,"line_start":231,"line_end":231,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"mbedtls_md_sha256","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA256` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:231:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA256 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha256`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA384` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6686,"byte_end":6703,"line_start":238,"line_end":238,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"mbedtls_md_sha384","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA384` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA384 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha384`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_SHA512` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":6939,"byte_end":6956,"line_start":245,"line_end":245,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":26}],"label":null,"suggested_replacement":"mbedtls_md_sha512","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_SHA512` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:245:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_SHA512 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_sha512`\u001b[0m\n\n"}
{"message":"variable `MBEDTLS_MD_RIPEMD160` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/x509/x509.rs","byte_start":7192,"byte_end":7212,"line_start":252,"line_end":252,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{","highlight_start":9,"highlight_end":29}],"label":null,"suggested_replacement":"mbedtls_md_ripemd160","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `MBEDTLS_MD_RIPEMD160` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/x509/x509.rs:252:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        MBEDTLS_MD_RIPEMD160 => return mbedtls_md_info_t{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `mbedtls_md_ripemd160`\u001b[0m\n\n"}
{"message":"constant `ciL` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2058,"byte_end":2061,"line_start":35,"line_end":35,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const ciL: usize = 8;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2058,"byte_end":2061,"line_start":35,"line_end":35,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const ciL: usize = 8;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":"CI_L","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `ciL` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:35:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst ciL: usize = 8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `CI_L`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"constant `biL` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2080,"byte_end":2083,"line_start":36,"line_end":36,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const biL: usize = ciL << 3;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2080,"byte_end":2083,"line_start":36,"line_end":36,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const biL: usize = ciL << 3;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":"BI_L","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `biL` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:36:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst biL: usize = ciL << 3;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BI_L`\u001b[0m\n\n"}
{"message":"constant `biH` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2109,"byte_end":2112,"line_start":37,"line_end":37,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const biH: usize = ciL << 2;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2109,"byte_end":2112,"line_start":37,"line_end":37,"column_start":7,"column_end":10,"is_primary":true,"text":[{"text":"const biH: usize = ciL << 2;","highlight_start":7,"highlight_end":10}],"label":null,"suggested_replacement":"BI_H","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `biH` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:37:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst biH: usize = ciL << 2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `BI_H`\u001b[0m\n\n"}
{"message":"function `BITS_TO_LIMBS` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2175,"byte_end":2188,"line_start":41,"line_end":41,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn BITS_TO_LIMBS(i: usize) -> usize {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2175,"byte_end":2188,"line_start":41,"line_end":41,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn BITS_TO_LIMBS(i: usize) -> usize {","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":"bits_to_limbs","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `BITS_TO_LIMBS` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:41:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn BITS_TO_LIMBS(i: usize) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bits_to_limbs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"function `CHARS_TO_LIMBS` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2262,"byte_end":2276,"line_start":44,"line_end":44,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn CHARS_TO_LIMBS(i: usize) -> usize {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2262,"byte_end":2276,"line_start":44,"line_end":44,"column_start":4,"column_end":18,"is_primary":true,"text":[{"text":"fn CHARS_TO_LIMBS(i: usize) -> usize {","highlight_start":4,"highlight_end":18}],"label":null,"suggested_replacement":"chars_to_limbs","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `CHARS_TO_LIMBS` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:44:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn CHARS_TO_LIMBS(i: usize) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `chars_to_limbs`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2512,"byte_end":2513,"line_start":55,"line_end":55,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_init( X: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2512,"byte_end":2513,"line_start":55,"line_end":55,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_init( X: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:55:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_init( X: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2610,"byte_end":2611,"line_start":61,"line_end":61,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_free( X: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2610,"byte_end":2611,"line_start":61,"line_end":61,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_free( X: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:61:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_free( X: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":2749,"byte_end":2750,"line_start":69,"line_end":69,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_grow( X: &mut mbedtls_mpi, nblimbs: usize) -> i32","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":2749,"byte_end":2750,"line_start":69,"line_end":69,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_grow( X: &mut mbedtls_mpi, nblimbs: usize) -> i32","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:69:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_grow( X: &mut mbedtls_mpi, nblimbs: usize) -> i32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":3194,"byte_end":3195,"line_start":89,"line_end":89,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shrink( mut X: &mut mbedtls_mpi, nblimbs: usize ) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":3194,"byte_end":3195,"line_start":89,"line_end":89,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shrink( mut X: &mut mbedtls_mpi, nblimbs: usize ) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:89:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shrink( mut X: &mut mbedtls_mpi, nblimbs: usize ) -> i32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":3852,"byte_end":3853,"line_start":125,"line_end":125,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":3852,"byte_end":3853,"line_start":125,"line_end":125,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:125:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":3873,"byte_end":3874,"line_start":125,"line_end":125,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":3873,"byte_end":3874,"line_start":125,"line_end":125,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:125:47\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_copy( mut X: &mut mbedtls_mpi, Y: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":4457,"byte_end":4458,"line_start":157,"line_end":157,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":4457,"byte_end":4458,"line_start":157,"line_end":157,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:157:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":4478,"byte_end":4479,"line_start":157,"line_end":157,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":4478,"byte_end":4479,"line_start":157,"line_end":157,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:157:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_swap( X: &mut mbedtls_mpi, Y: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5246,"byte_end":5247,"line_start":188,"line_end":188,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":5246,"byte_end":5247,"line_start":188,"line_end":188,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:188:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5268,"byte_end":5269,"line_start":188,"line_end":188,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":5268,"byte_end":5269,"line_start":188,"line_end":188,"column_start":60,"column_end":61,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32","highlight_start":60,"highlight_end":61}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:188:60\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_assign( mut X: &mut mbedtls_mpi , Y: &mbedtls_mpi, mut assign: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5734,"byte_end":5735,"line_start":206,"line_end":206,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32","highlight_start":36,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":5734,"byte_end":5735,"line_start":206,"line_end":206,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32","highlight_start":36,"highlight_end":37}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:206:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":5759,"byte_end":5760,"line_start":206,"line_end":206,"column_start":61,"column_end":62,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32","highlight_start":61,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":5759,"byte_end":5760,"line_start":206,"line_end":206,"column_start":61,"column_end":62,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32","highlight_start":61,"highlight_end":62}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:206:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_safe_cond_swap( mut X: &mut mbedtls_mpi, mut Y: &mut mbedtls_mpi, mut swap: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":6428,"byte_end":6429,"line_start":232,"line_end":232,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_lset( mut X: &mut mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":6428,"byte_end":6429,"line_start":232,"line_end":232,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_lset( mut X: &mut mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:232:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_lset( mut X: &mut mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":6836,"byte_end":6837,"line_start":254,"line_end":254,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_get_bit(  X: &mbedtls_mpi, pos: usize ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":6836,"byte_end":6837,"line_start":254,"line_end":254,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_get_bit(  X: &mbedtls_mpi, pos: usize ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:254:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_get_bit(  X: &mbedtls_mpi, pos: usize ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"function `GET_BYTE` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":6997,"byte_end":7005,"line_start":261,"line_end":261,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              ","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":6997,"byte_end":7005,"line_start":261,"line_end":261,"column_start":4,"column_end":12,"is_primary":true,"text":[{"text":"fn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              ","highlight_start":4,"highlight_end":12}],"label":null,"suggested_replacement":"get_byte","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `GET_BYTE` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:261:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `get_byte`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7007,"byte_end":7008,"line_start":261,"line_end":261,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"fn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              ","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":7007,"byte_end":7008,"line_start":261,"line_end":261,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"fn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              ","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:261:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn GET_BYTE( X: &mbedtls_mpi, i: usize ) -> i32 {                              \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7176,"byte_end":7177,"line_start":265,"line_end":265,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_set_bit( mut X: &mut mbedtls_mpi, pos: usize, val: u8 ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":7176,"byte_end":7177,"line_start":265,"line_end":265,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_set_bit( mut X: &mut mbedtls_mpi, pos: usize, val: u8 ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:265:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_set_bit( mut X: &mut mbedtls_mpi, pos: usize, val: u8 ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":7663,"byte_end":7664,"line_start":288,"line_end":288,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_lsb( X: &mbedtls_mpi) -> usize","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":7663,"byte_end":7664,"line_start":288,"line_end":288,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_lsb( X: &mbedtls_mpi) -> usize","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:288:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_lsb( X: &mbedtls_mpi) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":8306,"byte_end":8307,"line_start":322,"line_end":322,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_bitlen( X: &mbedtls_mpi ) -> usize","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":8306,"byte_end":8307,"line_start":322,"line_end":322,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_bitlen( X: &mbedtls_mpi ) -> usize","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:322:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_bitlen( X: &mbedtls_mpi ) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":8620,"byte_end":8621,"line_start":342,"line_end":342,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_size( X: &mbedtls_mpi ) -> usize","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":8620,"byte_end":8621,"line_start":342,"line_end":342,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_size( X: &mbedtls_mpi ) -> usize","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:342:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_size( X: &mbedtls_mpi ) -> usize\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":9166,"byte_end":9167,"line_start":359,"line_end":359,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_read_string( mut X: &mut mbedtls_mpi, radix: i32, s: &str ) -> i32","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":9166,"byte_end":9167,"line_start":359,"line_end":359,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_read_string( mut X: &mut mbedtls_mpi, radix: i32, s: &str ) -> i32","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:359:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_read_string( mut X: &mut mbedtls_mpi, radix: i32, s: &str ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":9408,"byte_end":9409,"line_start":367,"line_end":367,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut T: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":9408,"byte_end":9409,"line_start":367,"line_end":367,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut T: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:367:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut T: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11000,"byte_end":11001,"line_start":427,"line_end":427,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11000,"byte_end":11001,"line_start":427,"line_end":427,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:427:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11021,"byte_end":11022,"line_start":427,"line_end":427,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11021,"byte_end":11022,"line_start":427,"line_end":427,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:427:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11081,"byte_end":11083,"line_start":429,"line_end":429,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11081,"byte_end":11083,"line_start":429,"line_end":429,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:429:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11422,"byte_end":11423,"line_start":443,"line_end":443,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11422,"byte_end":11423,"line_start":443,"line_end":443,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:443:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11443,"byte_end":11444,"line_start":443,"line_end":443,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11443,"byte_end":11444,"line_start":443,"line_end":443,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:443:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11503,"byte_end":11505,"line_start":445,"line_end":445,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11503,"byte_end":11505,"line_start":445,"line_end":445,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:445:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11844,"byte_end":11845,"line_start":459,"line_end":459,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11844,"byte_end":11845,"line_start":459,"line_end":459,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:459:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m459\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11865,"byte_end":11866,"line_start":459,"line_end":459,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11865,"byte_end":11866,"line_start":459,"line_end":459,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:459:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m459\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":11882,"byte_end":11883,"line_start":459,"line_end":459,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":11882,"byte_end":11883,"line_start":459,"line_end":459,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:459:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m459\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12371,"byte_end":12372,"line_start":485,"line_end":485,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12371,"byte_end":12372,"line_start":485,"line_end":485,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:485:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12392,"byte_end":12393,"line_start":485,"line_end":485,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12392,"byte_end":12393,"line_start":485,"line_end":485,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":49,"highlight_end":50}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:485:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12409,"byte_end":12410,"line_start":485,"line_end":485,"column_start":66,"column_end":67,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":66,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12409,"byte_end":12410,"line_start":485,"line_end":485,"column_start":66,"column_end":67,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":66,"highlight_end":67}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:485:66\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_mpi(mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12897,"byte_end":12898,"line_start":510,"line_end":510,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12897,"byte_end":12898,"line_start":510,"line_end":510,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:510:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12919,"byte_end":12920,"line_start":510,"line_end":510,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12919,"byte_end":12920,"line_start":510,"line_end":510,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:510:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12936,"byte_end":12937,"line_start":510,"line_end":510,"column_start":68,"column_end":69,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":68,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12936,"byte_end":12937,"line_start":510,"line_end":510,"column_start":68,"column_end":69,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":68,"highlight_end":69}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:510:68\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m510\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_sub_abs( mut X: &mut mbedtls_mpi , A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `TB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":12975,"byte_end":12977,"line_start":512,"line_end":512,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p: vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":12975,"byte_end":12977,"line_start":512,"line_end":512,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p: vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"tb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:512:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m512\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p: vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tb`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":13712,"byte_end":13713,"line_start":543,"line_end":543,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":13712,"byte_end":13713,"line_start":543,"line_end":543,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:543:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":13733,"byte_end":13734,"line_start":543,"line_end":543,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":13733,"byte_end":13734,"line_start":543,"line_end":543,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:543:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":13750,"byte_end":13751,"line_start":543,"line_end":543,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":13750,"byte_end":13751,"line_start":543,"line_end":543,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:543:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_add_abs( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":15274,"byte_end":15275,"line_start":605,"line_end":605,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":15274,"byte_end":15275,"line_start":605,"line_end":605,"column_start":24,"column_end":25,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":24,"highlight_end":25}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:605:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m605\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":15291,"byte_end":15292,"line_start":605,"line_end":605,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":15291,"byte_end":15292,"line_start":605,"line_end":605,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:605:41\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m605\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_abs(X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":15831,"byte_end":15832,"line_start":632,"line_end":632,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":15831,"byte_end":15832,"line_start":632,"line_end":632,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:632:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":15852,"byte_end":15853,"line_start":632,"line_end":632,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":15852,"byte_end":15853,"line_start":632,"line_end":632,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:632:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mul_int( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, b: mbedtls_mpi_uint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":15912,"byte_end":15914,"line_start":634,"line_end":634,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":15912,"byte_end":15914,"line_start":634,"line_end":634,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:634:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16148,"byte_end":16149,"line_start":644,"line_end":644,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":16148,"byte_end":16149,"line_start":644,"line_end":644,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:644:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16169,"byte_end":16170,"line_start":644,"line_end":644,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":16169,"byte_end":16170,"line_start":644,"line_end":644,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:644:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16186,"byte_end":16187,"line_start":644,"line_end":644,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":16186,"byte_end":16187,"line_start":644,"line_end":644,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:644:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m644\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mul_mpi( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `TA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16327,"byte_end":16329,"line_start":649,"line_end":649,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":16327,"byte_end":16329,"line_start":649,"line_end":649,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"ta","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TA` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:649:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m649\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ta`\u001b[0m\n\n"}
{"message":"variable `TB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":16390,"byte_end":16392,"line_start":650,"line_end":650,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":16390,"byte_end":16392,"line_start":650,"line_end":650,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"tb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TB` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:650:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m650\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tb`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":17015,"byte_end":17016,"line_start":677,"line_end":677,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"fn mpi_write_hlp( mut X: &mut mbedtls_mpi, radix: i32, buf: &mut Vec<u8>, buflen: usize) -> i32","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":17015,"byte_end":17016,"line_start":677,"line_end":677,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"fn mpi_write_hlp( mut X: &mut mbedtls_mpi, radix: i32, buf: &mut Vec<u8>, buflen: usize) -> i32","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:677:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m677\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_write_hlp( mut X: &mut mbedtls_mpi, radix: i32, buf: &mut Vec<u8>, buflen: usize) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `tmpX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":17537,"byte_end":17541,"line_start":694,"line_end":694,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":17537,"byte_end":17541,"line_start":694,"line_end":694,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"tmp_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tmpX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:694:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m694\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tmp_x`\u001b[0m\n\n"}
{"message":"variable `biLvar` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":18900,"byte_end":18906,"line_start":741,"line_end":741,"column_start":7,"column_end":13,"is_primary":true,"text":[{"text":"fn sh(biLvar: usize) -> usize {","highlight_start":7,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":18900,"byte_end":18906,"line_start":741,"line_end":741,"column_start":7,"column_end":13,"is_primary":true,"text":[{"text":"fn sh(biLvar: usize) -> usize {","highlight_start":7,"highlight_end":13}],"label":null,"suggested_replacement":"bi_lvar","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `biLvar` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:741:7\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m741\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn sh(biLvar: usize) -> usize {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `bi_lvar`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":19011,"byte_end":19012,"line_start":747,"line_end":747,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_int( X: &mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":19011,"byte_end":19012,"line_start":747,"line_end":747,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_int( X: &mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:747:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m747\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_int( X: &mbedtls_mpi, z: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":19071,"byte_end":19072,"line_start":749,"line_end":749,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{n:0, s:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":19071,"byte_end":19072,"line_start":749,"line_end":749,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{n:0, s:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:749:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m749\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut Y: mbedtls_mpi = mbedtls_mpi{n:0, s:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":19416,"byte_end":19417,"line_start":761,"line_end":761,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":19416,"byte_end":19417,"line_start":761,"line_end":761,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:761:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m761\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":19433,"byte_end":19434,"line_start":761,"line_end":761,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":19433,"byte_end":19434,"line_start":761,"line_end":761,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:761:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m761\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_cmp_mpi (X: &mbedtls_mpi, Y: &mbedtls_mpi) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":20087,"byte_end":20088,"line_start":792,"line_end":792,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_int( r: &mut mbedtls_mpi_uint, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":20087,"byte_end":20088,"line_start":792,"line_end":792,"column_start":51,"column_end":52,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_int( r: &mut mbedtls_mpi_uint, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":51,"highlight_end":52}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:792:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m792\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_int( r: &mut mbedtls_mpi_uint, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `Q` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21021,"byte_end":21022,"line_start":835,"line_end":835,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21021,"byte_end":21022,"line_start":835,"line_end":835,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"q","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:835:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m835\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21042,"byte_end":21043,"line_start":835,"line_end":835,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21042,"byte_end":21043,"line_start":835,"line_end":835,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:835:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m835\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21071,"byte_end":21072,"line_start":835,"line_end":835,"column_start":79,"column_end":80,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":79,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21071,"byte_end":21072,"line_start":835,"line_end":835,"column_start":79,"column_end":80,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32","highlight_start":79,"highlight_end":80}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:835:79\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m835\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_int( mut Q: &mut mbedtls_mpi, R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, b: mbedtls_mpi_sint ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `_B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21131,"byte_end":21133,"line_start":837,"line_end":837,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21131,"byte_end":21133,"line_start":837,"line_end":837,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:837:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut _B: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_b`\u001b[0m\n\n"}
{"message":"variable `Q` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21464,"byte_end":21465,"line_start":847,"line_end":847,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21464,"byte_end":21465,"line_start":847,"line_end":847,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"q","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Q` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:847:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `q`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21497,"byte_end":21498,"line_start":847,"line_end":847,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21497,"byte_end":21498,"line_start":847,"line_end":847,"column_start":62,"column_end":63,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":62,"highlight_end":63}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:847:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21526,"byte_end":21527,"line_start":847,"line_end":847,"column_start":91,"column_end":92,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":91,"highlight_end":92}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21526,"byte_end":21527,"line_start":847,"line_end":847,"column_start":91,"column_end":92,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":91,"highlight_end":92}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:847:91\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21543,"byte_end":21544,"line_start":847,"line_end":847,"column_start":108,"column_end":109,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":108,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21543,"byte_end":21544,"line_start":847,"line_end":847,"column_start":108,"column_end":109,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":108,"highlight_end":109}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:847:108\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_div_mpi( mut Q: Option<&mut mbedtls_mpi>, mut R: Option<&mut mbedtls_mpi>, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21720,"byte_end":21721,"line_start":854,"line_end":854,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21720,"byte_end":21721,"line_start":854,"line_end":854,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:854:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m854\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut X: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21782,"byte_end":21783,"line_start":855,"line_end":855,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21782,"byte_end":21783,"line_start":855,"line_end":855,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:855:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m855\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `Z` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21844,"byte_end":21845,"line_start":856,"line_end":856,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Z: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]}; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21844,"byte_end":21845,"line_start":856,"line_end":856,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Z: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]}; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"z","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Z` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:856:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut Z: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]}; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `z`\u001b[0m\n\n"}
{"message":"variable `T1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21907,"byte_end":21909,"line_start":857,"line_end":857,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut T1: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21907,"byte_end":21909,"line_start":857,"line_end":857,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut T1: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"t1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T1` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:857:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut T1: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t1`\u001b[0m\n\n"}
{"message":"variable `T2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":21970,"byte_end":21972,"line_start":858,"line_end":858,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut T2: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":21970,"byte_end":21972,"line_start":858,"line_end":858,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut T2: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"t2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T2` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:858:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut T2: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t2`\u001b[0m\n\n"}
{"message":"variable `tmpX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":23174,"byte_end":23178,"line_start":905,"line_end":905,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":23174,"byte_end":23178,"line_start":905,"line_end":905,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"tmp_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tmpX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:905:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m905\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tmp_x`\u001b[0m\n\n"}
{"message":"variable `tmpX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":24114,"byte_end":24118,"line_start":937,"line_end":937,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":24114,"byte_end":24118,"line_start":937,"line_end":937,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"tmp_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tmpX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:937:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m937\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tmp_x`\u001b[0m\n\n"}
{"message":"variable `tmpX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":24418,"byte_end":24422,"line_start":943,"line_end":943,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":24418,"byte_end":24422,"line_start":943,"line_end":943,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"tmp_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tmpX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:943:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m943\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tmp_x`\u001b[0m\n\n"}
{"message":"variable `tmpX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":24748,"byte_end":24752,"line_start":951,"line_end":951,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":24748,"byte_end":24752,"line_start":951,"line_end":951,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"tmp_x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `tmpX` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:951:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m951\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut tmpX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tmp_x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":25532,"byte_end":25533,"line_start":982,"line_end":982,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_l(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":25532,"byte_end":25533,"line_start":982,"line_end":982,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_l(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:982:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m982\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shift_l(mut X: &mut mbedtls_mpi, count: usize) -> i32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":26446,"byte_end":26447,"line_start":1027,"line_end":1027,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_r(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":26446,"byte_end":26447,"line_start":1027,"line_end":1027,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_shift_r(mut X: &mut mbedtls_mpi, count: usize) -> i32","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1027:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1027\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_shift_r(mut X: &mut mbedtls_mpi, count: usize) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `G` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27249,"byte_end":27250,"line_start":1066,"line_end":1066,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":27249,"byte_end":27250,"line_start":1066,"line_end":1066,"column_start":25,"column_end":26,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":25,"highlight_end":26}],"label":null,"suggested_replacement":"g","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `G` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1066:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1066\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `g`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27270,"byte_end":27271,"line_start":1066,"line_end":1066,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":27270,"byte_end":27271,"line_start":1066,"line_end":1066,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1066:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1066\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27287,"byte_end":27288,"line_start":1066,"line_end":1066,"column_start":63,"column_end":64,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":63,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":27287,"byte_end":27288,"line_start":1066,"line_end":1066,"column_start":63,"column_end":64,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":63,"highlight_end":64}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1066:63\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1066\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gcd( mut G: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `TA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27427,"byte_end":27429,"line_start":1071,"line_end":1071,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":27427,"byte_end":27429,"line_start":1071,"line_end":1071,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"ta","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TA` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1071:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1071\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TA: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ta`\u001b[0m\n\n"}
{"message":"variable `TB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":27490,"byte_end":27492,"line_start":1072,"line_end":1072,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":27490,"byte_end":27492,"line_start":1072,"line_end":1072,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"tb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TB` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1072:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1072\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TB: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tb`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":28801,"byte_end":28802,"line_start":1116,"line_end":1116,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_fill_random( mut X: &mut mbedtls_mpi, size: usize, ","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":28801,"byte_end":28802,"line_start":1116,"line_end":1116,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_fill_random( mut X: &mut mbedtls_mpi, size: usize, ","highlight_start":33,"highlight_end":34}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1116:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_fill_random( mut X: &mut mbedtls_mpi, size: usize, \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29411,"byte_end":29412,"line_start":1134,"line_end":1134,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29411,"byte_end":29412,"line_start":1134,"line_end":1134,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1134:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29436,"byte_end":29437,"line_start":1134,"line_end":1134,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29436,"byte_end":29437,"line_start":1134,"line_end":1134,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1134:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_exp_mod( mut X: &mut mbedtls_mpi, mut A: &mut mbedtls_mpi,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `E` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29482,"byte_end":29483,"line_start":1135,"line_end":1135,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29482,"byte_end":29483,"line_start":1135,"line_end":1135,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"e","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `E` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1135:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `e`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29499,"byte_end":29500,"line_start":1135,"line_end":1135,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29499,"byte_end":29500,"line_start":1135,"line_end":1135,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":43,"highlight_end":44}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1135:43\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `_RR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29520,"byte_end":29523,"line_start":1135,"line_end":1135,"column_start":64,"column_end":67,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":64,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29520,"byte_end":29523,"line_start":1135,"line_end":1135,"column_start":64,"column_end":67,"is_primary":true,"text":[{"text":"                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32","highlight_start":64,"highlight_end":67}],"label":null,"suggested_replacement":"_rr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `_RR` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1135:64\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         E: &mbedtls_mpi, N: &mbedtls_mpi, mut _RR: Option<&mut mbedtls_mpi> ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_rr`\u001b[0m\n\n"}
{"message":"variable `RR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":29942,"byte_end":29944,"line_start":1149,"line_end":1149,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]} ;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":29942,"byte_end":29944,"line_start":1149,"line_end":1149,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]} ;","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"rr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `RR` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1149:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]} ;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rr`\u001b[0m\n\n"}
{"message":"variable `T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":30004,"byte_end":30005,"line_start":1150,"line_end":1150,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":30004,"byte_end":30005,"line_start":1150,"line_end":1150,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1150:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t`\u001b[0m\n\n"}
{"message":"variable `W` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":30064,"byte_end":30065,"line_start":1151,"line_end":1151,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut W: Vec<mbedtls_mpi> = Vec::with_capacity( 1 << MBEDTLS_MPI_WINDOW_SIZE);   ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":30064,"byte_end":30065,"line_start":1151,"line_end":1151,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut W: Vec<mbedtls_mpi> = Vec::with_capacity( 1 << MBEDTLS_MPI_WINDOW_SIZE);   ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"w","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `W` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1151:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut W: Vec<mbedtls_mpi> = Vec::with_capacity( 1 << MBEDTLS_MPI_WINDOW_SIZE);   \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w`\u001b[0m\n\n"}
{"message":"variable `Apos` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":30152,"byte_end":30156,"line_start":1152,"line_end":1152,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut Apos: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":30152,"byte_end":30156,"line_start":1152,"line_end":1152,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    let mut Apos: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"apos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Apos` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1152:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1152\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut Apos: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `apos`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":34803,"byte_end":34804,"line_start":1334,"line_end":1334,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"fn mpi_montg_init( mm: &mut mbedtls_mpi_uint,  N: &mbedtls_mpi )","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":34803,"byte_end":34804,"line_start":1334,"line_end":1334,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"fn mpi_montg_init( mm: &mut mbedtls_mpi_uint,  N: &mbedtls_mpi )","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1334:48\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montg_init( mm: &mut mbedtls_mpi_uint,  N: &mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35091,"byte_end":35092,"line_start":1350,"line_end":1350,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":35091,"byte_end":35092,"line_start":1350,"line_end":1350,"column_start":17,"column_end":18,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":17,"highlight_end":18}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1350:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35112,"byte_end":35113,"line_start":1350,"line_end":1350,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":35112,"byte_end":35113,"line_start":1350,"line_end":1350,"column_start":38,"column_end":39,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":38,"highlight_end":39}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1350:38\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35129,"byte_end":35130,"line_start":1350,"line_end":1350,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":55,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":35129,"byte_end":35130,"line_start":1350,"line_end":1350,"column_start":55,"column_end":56,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":55,"highlight_end":56}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1350:55\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":35168,"byte_end":35169,"line_start":1350,"line_end":1350,"column_start":94,"column_end":95,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":94,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":35168,"byte_end":35169,"line_start":1350,"line_end":1350,"column_start":94,"column_end":95,"is_primary":true,"text":[{"text":"fn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )","highlight_start":94,"highlight_end":95}],"label":null,"suggested_replacement":"t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1350:94\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montmul( A: &mut mbedtls_mpi, B: &mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36061,"byte_end":36062,"line_start":1383,"line_end":1383,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36061,"byte_end":36062,"line_start":1383,"line_end":1383,"column_start":21,"column_end":22,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":21,"highlight_end":22}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1383:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36082,"byte_end":36083,"line_start":1383,"line_end":1383,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36082,"byte_end":36083,"line_start":1383,"line_end":1383,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1383:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36125,"byte_end":36126,"line_start":1383,"line_end":1383,"column_start":85,"column_end":86,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":85,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36125,"byte_end":36126,"line_start":1383,"line_end":1383,"column_start":85,"column_end":86,"is_primary":true,"text":[{"text":"fn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )","highlight_start":85,"highlight_end":86}],"label":null,"suggested_replacement":"t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1383:85\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_montred( mut A: &mut mbedtls_mpi, N: &mbedtls_mpi, mm: mbedtls_mpi_uint, mut T: &mut mbedtls_mpi )\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t`\u001b[0m\n\n"}
{"message":"variable `U` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36195,"byte_end":36196,"line_start":1386,"line_end":1386,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut U: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36195,"byte_end":36196,"line_start":1386,"line_end":1386,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut U: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"u","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `U` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1386:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut U: mbedtls_mpi = mbedtls_mpi{s:0, n:0, p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `u`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36389,"byte_end":36390,"line_start":1392,"line_end":1392,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36389,"byte_end":36390,"line_start":1392,"line_end":1392,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1392:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36410,"byte_end":36411,"line_start":1392,"line_end":1392,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36410,"byte_end":36411,"line_start":1392,"line_end":1392,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1392:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `B` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":36427,"byte_end":36428,"line_start":1392,"line_end":1392,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":36427,"byte_end":36428,"line_start":1392,"line_end":1392,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `B` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1392:67\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_mod_mpi( mut R: &mut mbedtls_mpi, A: &mbedtls_mpi, B: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `b`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38021,"byte_end":38022,"line_start":1445,"line_end":1445,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38021,"byte_end":38022,"line_start":1445,"line_end":1445,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1445:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38042,"byte_end":38043,"line_start":1445,"line_end":1445,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38042,"byte_end":38043,"line_start":1445,"line_end":1445,"column_start":50,"column_end":51,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":50,"highlight_end":51}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1445:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38059,"byte_end":38060,"line_start":1445,"line_end":1445,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38059,"byte_end":38060,"line_start":1445,"line_end":1445,"column_start":67,"column_end":68,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32","highlight_start":67,"highlight_end":68}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1445:67\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_inv_mod( mut X: &mut mbedtls_mpi, A: &mbedtls_mpi, N: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `G` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38160,"byte_end":38161,"line_start":1448,"line_end":1448,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38160,"byte_end":38161,"line_start":1448,"line_end":1448,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"g","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `G` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1448:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `g`\u001b[0m\n\n"}
{"message":"variable `TA` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38216,"byte_end":38218,"line_start":1448,"line_end":1448,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38216,"byte_end":38218,"line_start":1448,"line_end":1448,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":"ta","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TA` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1448:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ta`\u001b[0m\n\n"}
{"message":"variable `TU` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38273,"byte_end":38275,"line_start":1448,"line_end":1448,"column_start":126,"column_end":128,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":126,"highlight_end":128}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38273,"byte_end":38275,"line_start":1448,"line_end":1448,"column_start":126,"column_end":128,"is_primary":true,"text":[{"text":"    let mut G: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TA: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":126,"highlight_end":128}],"label":null,"suggested_replacement":"tu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TU` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1448:126\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1448\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m= mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TU: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tu`\u001b[0m\n\n"}
{"message":"variable `U1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38334,"byte_end":38336,"line_start":1449,"line_end":1449,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38334,"byte_end":38336,"line_start":1449,"line_end":1449,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"u1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `U1` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1449:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `u1`\u001b[0m\n\n"}
{"message":"variable `U2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38391,"byte_end":38393,"line_start":1449,"line_end":1449,"column_start":70,"column_end":72,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":70,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38391,"byte_end":38393,"line_start":1449,"line_end":1449,"column_start":70,"column_end":72,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":70,"highlight_end":72}],"label":null,"suggested_replacement":"u2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `U2` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1449:70\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0ms:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `u2`\u001b[0m\n\n"}
{"message":"variable `TB` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38448,"byte_end":38450,"line_start":1449,"line_end":1449,"column_start":127,"column_end":129,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":127,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38448,"byte_end":38450,"line_start":1449,"line_end":1449,"column_start":127,"column_end":129,"is_primary":true,"text":[{"text":"    let mut U1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":127,"highlight_end":129}],"label":null,"suggested_replacement":"tb","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TB` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1449:127\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m= mbedtls_mpi{s:0,n:0,p:vec![]}; let mut TB: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tb`\u001b[0m\n\n"}
{"message":"variable `TV` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38509,"byte_end":38511,"line_start":1450,"line_end":1450,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38509,"byte_end":38511,"line_start":1450,"line_end":1450,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"tv","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `TV` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1450:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `tv`\u001b[0m\n\n"}
{"message":"variable `V1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38566,"byte_end":38568,"line_start":1450,"line_end":1450,"column_start":70,"column_end":72,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":70,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38566,"byte_end":38568,"line_start":1450,"line_end":1450,"column_start":70,"column_end":72,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":70,"highlight_end":72}],"label":null,"suggested_replacement":"v1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `V1` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1450:70\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0ms:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `v1`\u001b[0m\n\n"}
{"message":"variable `V2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":38623,"byte_end":38625,"line_start":1450,"line_end":1450,"column_start":127,"column_end":129,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":127,"highlight_end":129}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":38623,"byte_end":38625,"line_start":1450,"line_end":1450,"column_start":127,"column_end":129,"is_primary":true,"text":[{"text":"    let mut TV: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V1: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":127,"highlight_end":129}],"label":null,"suggested_replacement":"v2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `V2` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1450:127\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0ms:0,n:0,p:vec![]}; let mut V2: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `v2`\u001b[0m\n\n"}
{"message":"constant `small_prime` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":42471,"byte_end":42482,"line_start":1558,"line_end":1558,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const small_prime: [i64; 168] = [","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":42471,"byte_end":42482,"line_start":1558,"line_end":1558,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const small_prime: [i64; 168] = [","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":"SMALL_PRIME","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `small_prime` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1558:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1558\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst small_prime: [i64; 168] = [\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `SMALL_PRIME`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":43649,"byte_end":43650,"line_start":1582,"line_end":1582,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mpi_check_small_factors( X: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":43649,"byte_end":43650,"line_start":1582,"line_end":1582,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"fn mpi_check_small_factors( X: &mbedtls_mpi ) -> i32","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1582:29\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_check_small_factors( X: &mbedtls_mpi ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44182,"byte_end":44183,"line_start":1606,"line_end":1606,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mpi_miller_rabin( X: &mbedtls_mpi, rounds: usize,","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44182,"byte_end":44183,"line_start":1606,"line_end":1606,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"fn mpi_miller_rabin( X: &mbedtls_mpi, rounds: usize,","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1606:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1606\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mpi_miller_rabin( X: &mbedtls_mpi, rounds: usize,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `W` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44446,"byte_end":44447,"line_start":1615,"line_end":1615,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44446,"byte_end":44447,"line_start":1615,"line_end":1615,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"w","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `W` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1615:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1615\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_m\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w`\u001b[0m\n\n"}
{"message":"variable `R` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44502,"byte_end":44503,"line_start":1615,"line_end":1615,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44502,"byte_end":44503,"line_start":1615,"line_end":1615,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":"r","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `R` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1615:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1615\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_m\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `r`\u001b[0m\n\n"}
{"message":"variable `T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44559,"byte_end":44560,"line_start":1615,"line_end":1615,"column_start":126,"column_end":127,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":126,"highlight_end":127}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44559,"byte_end":44560,"line_start":1615,"line_end":1615,"column_start":126,"column_end":127,"is_primary":true,"text":[{"text":"    let mut W: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut R: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; ","highlight_start":126,"highlight_end":127}],"label":null,"suggested_replacement":"t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `T` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1615:126\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1615\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m= mbedtls_mpi{s:0,n:0,p:vec![]};  let mut T: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `t`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44620,"byte_end":44621,"line_start":1616,"line_end":1616,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44620,"byte_end":44621,"line_start":1616,"line_end":1616,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1616:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `RR` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":44676,"byte_end":44678,"line_start":1616,"line_end":1616,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":44676,"byte_end":44678,"line_start":1616,"line_end":1616,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":"rr","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `RR` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1616:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1616\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut RR: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rr`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":46907,"byte_end":46908,"line_start":1684,"line_end":1684,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime( X: &mbedtls_mpi, f_rng: fn (&mut Vec<u8>, &mut [u64], usize) -> i32, p_rng: &mut Vec<u8> ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":46907,"byte_end":46908,"line_start":1684,"line_end":1684,"column_start":26,"column_end":27,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime( X: &mbedtls_mpi, f_rng: fn (&mut Vec<u8>, &mut [u64], usize) -> i32, p_rng: &mut Vec<u8> ) -> i32","highlight_start":26,"highlight_end":27}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1684:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1684\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_is_prime( X: &mbedtls_mpi, f_rng: fn (&mut Vec<u8>, &mut [u64], usize) -> i32, p_rng: &mut Vec<u8> ) -> i32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":47097,"byte_end":47098,"line_start":1689,"line_end":1689,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gen_prime( mut X: &mut mbedtls_mpi, nbits: usize, flags: i32,","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":47097,"byte_end":47098,"line_start":1689,"line_end":1689,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_gen_prime( mut X: &mut mbedtls_mpi, nbits: usize, flags: i32,","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1689:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_gen_prime( mut X: &mut mbedtls_mpi, nbits: usize, flags: i32,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `CEIL_MAXUINT_DIV_SQRT2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":47240,"byte_end":47262,"line_start":1693,"line_end":1693,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"    let CEIL_MAXUINT_DIV_SQRT2: u64 = 0xb504f333f9de6485 as u64;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":47240,"byte_end":47262,"line_start":1693,"line_end":1693,"column_start":9,"column_end":31,"is_primary":true,"text":[{"text":"    let CEIL_MAXUINT_DIV_SQRT2: u64 = 0xb504f333f9de6485 as u64;","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":"ceil_maxuint_div_sqrt2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `CEIL_MAXUINT_DIV_SQRT2` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1693:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let CEIL_MAXUINT_DIV_SQRT2: u64 = 0xb504f333f9de6485 as u64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ceil_maxuint_div_sqrt2`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":47464,"byte_end":47465,"line_start":1700,"line_end":1700,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":47464,"byte_end":47465,"line_start":1700,"line_end":1700,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1700:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"constant `gcd_pairs` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50642,"byte_end":50651,"line_start":1794,"line_end":1794,"column_start":7,"column_end":16,"is_primary":true,"text":[{"text":"const gcd_pairs: [[i64; 3]; GCD_PAIR_COUNT] = ","highlight_start":7,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":50642,"byte_end":50651,"line_start":1794,"line_end":1794,"column_start":7,"column_end":16,"is_primary":true,"text":[{"text":"const gcd_pairs: [[i64; 3]; GCD_PAIR_COUNT] = ","highlight_start":7,"highlight_end":16}],"label":null,"suggested_replacement":"GCD_PAIRS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `gcd_pairs` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1794:7\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mconst gcd_pairs: [[i64; 3]; GCD_PAIR_COUNT] = \u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `GCD_PAIRS`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":50831,"byte_end":50832,"line_start":1799,"line_end":1799,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime_ext( X: &mbedtls_mpi, rounds: i32,","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":50831,"byte_end":50832,"line_start":1799,"line_end":1799,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn mbedtls_mpi_is_prime_ext( X: &mbedtls_mpi, rounds: i32,","highlight_start":30,"highlight_end":31}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1799:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1799\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn mbedtls_mpi_is_prime_ext( X: &mbedtls_mpi, rounds: i32,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `XX` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51018,"byte_end":51020,"line_start":1803,"line_end":1803,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut XX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51018,"byte_end":51020,"line_start":1803,"line_end":1803,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let mut XX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"xx","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `XX` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1803:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1803\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut XX: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `xx`\u001b[0m\n\n"}
{"message":"variable `A` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51686,"byte_end":51687,"line_start":1831,"line_end":1831,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51686,"byte_end":51687,"line_start":1831,"line_end":1831,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `A` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1831:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mp\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `a`\u001b[0m\n\n"}
{"message":"variable `E` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51742,"byte_end":51743,"line_start":1831,"line_end":1831,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51742,"byte_end":51743,"line_start":1831,"line_end":1831,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":"e","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `E` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1831:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mp\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `e`\u001b[0m\n\n"}
{"message":"variable `N` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51798,"byte_end":51799,"line_start":1831,"line_end":1831,"column_start":125,"column_end":126,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":125,"highlight_end":126}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51798,"byte_end":51799,"line_start":1831,"line_end":1831,"column_start":125,"column_end":126,"is_primary":true,"text":[{"text":"    let mut A: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut E: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":125,"highlight_end":126}],"label":null,"suggested_replacement":"n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `N` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1831:125\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut N: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `n`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51858,"byte_end":51859,"line_start":1832,"line_end":1832,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51858,"byte_end":51859,"line_start":1832,"line_end":1832,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1832:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mp\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51914,"byte_end":51915,"line_start":1832,"line_end":1832,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51914,"byte_end":51915,"line_start":1832,"line_end":1832,"column_start":69,"column_end":70,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":69,"highlight_end":70}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1832:69\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `U` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":51970,"byte_end":51971,"line_start":1832,"line_end":1832,"column_start":125,"column_end":126,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":125,"highlight_end":126}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":51970,"byte_end":51971,"line_start":1832,"line_end":1832,"column_start":125,"column_end":126,"is_primary":true,"text":[{"text":"    let mut X: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut Y: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":125,"highlight_end":126}],"label":null,"suggested_replacement":"u","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `U` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1832:125\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m{s:0,n:0,p:vec![]}; let mut U: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `u`\u001b[0m\n\n"}
{"message":"variable `V` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/bignum.rs","byte_start":52030,"byte_end":52031,"line_start":1833,"line_end":1833,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut V: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/bignum.rs","byte_start":52030,"byte_end":52031,"line_start":1833,"line_end":1833,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    let mut V: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};","highlight_start":13,"highlight_end":14}],"label":null,"suggested_replacement":"v","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `V` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bignum.rs:1833:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1833\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mut V: mbedtls_mpi = mbedtls_mpi{s:0,n:0,p:vec![]};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `v`\u001b[0m\n\n"}
{"message":"798 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 798 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0170`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0170`.\u001b[0m\n"}
