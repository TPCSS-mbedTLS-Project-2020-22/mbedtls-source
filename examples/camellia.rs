use mbed::cipher::camellia::*;
fn main() {
    // test();
    // let keybits: u32 = 128;

    // let key: [u8; 32] = [
    //     0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
    //     0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    //     0x00, 0x00,
    // ];

    // //128 Bit
    // let mut cipher = CamelliaContext::init(key, keybits);

    // let plain_text: [u8; 16] = [
    //     0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
    //     0x10,
    // ];
    // println!("Plain text: {:?}", plain_text);

    // cipher.set_mode(ENCRYPT);

    // let encrypted_value = cipher.mbedtls_camellia_crypt_ecb(plain_text);

    // println!("Encrypted Value of the text: {:?}", encrypted_value);

    // cipher.set_mode(DECRYPT);

    // let decrypted_value = cipher.mbedtls_camellia_crypt_ecb(encrypted_value);

    // println!("Decrypted Value of the ciphertext: {:?}", decrypted_value);

    // 192 Bit

    // let key: [u8; 32] = [
    //     0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
    //     0x10, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    //     0x00, 0x00,
    // ];
    // let mut cipher = CamelliaContext::init(key, 192);

    // cipher.set_mode(ENCRYPT);

    let key: [u8; 32] = [
        0x60, 0x3D, 0xEB, 0x10, 0x15, 0xCA, 0x71, 0xBE, 0x2B, 0x73, 0xAE, 0xF0, 0x85, 0x7D, 0x77,
        0x81, 0x1F, 0x35, 0x2C, 0x07, 0x3B, 0x61, 0x08, 0xD7, 0x2D, 0x98, 0x10, 0xA3, 0x09, 0x14,
        0xDF, 0xF4,
    ];

    let iv: [u8; 16] = [
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
        0x0F,
    ];

    let ciphertext: Vec<u8> = vec![
        0xE6, 0xCF, 0xA3, 0x5F, 0xC0, 0x2B, 0x13, 0x4A, 0x4D, 0x2C, 0x0B, 0x67, 0x37, 0xAC, 0x3E,
        0xDA,
    ];

    let text: Vec<u8> = vec![
        0x6B, 0xC1, 0xBE, 0xE2, 0x2E, 0x40, 0x9F, 0x96, 0xE9, 0x3D, 0x7E, 0x11, 0x73, 0x93, 0x17,
        0x2A,
    ];

    let mut cipher = CamelliaContext::init(key, 256);
    cipher.set_mode(ENCRYPT);

    let actual_ctext = cipher.mbedtls_camellia_crypt_cbc(iv, 16, text);

    // for i in 0..16 {
    //     println!("{} | {} ", expectedtext[i], actual_plaintext[i]);
    // }

    //println!("Expected plain text :{:?}", actual_plaintext);
}
