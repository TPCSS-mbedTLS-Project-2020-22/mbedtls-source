use mbed::cipher::camellia::*;
fn main() {
    test();
    let keybits: u32 = 128;

    let key: [u8; 32] = [
        0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
        0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00,
    ];

    //128 Bit
    let mut cipher = CamelliaContext::init(key, keybits);

    let plain_text: [u8; 16] = [
        0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
        0x10,
    ];
    println!("Plain text: {:?}", plain_text);

    cipher.set_mode(ENCRYPT);

    let encrypted_value = cipher.mbedtls_camellia_crypt_ecb(plain_text);

    println!("Encrypted Value of the text: {:?}", encrypted_value);

    cipher.set_mode(DECRYPT);

    let decrypted_value = cipher.mbedtls_camellia_crypt_ecb(encrypted_value);

    println!("Decrypted Value of the ciphertext: {:?}", decrypted_value);

    // 192 Bit

    // let key: [u8; 32] = [
    //     0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32,
    //     0x10, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    //     0x00, 0x00,
    // ];
    // let mut cipher = CamelliaContext::init(key, 192);

    // cipher.set_mode(ENCRYPT);
}
